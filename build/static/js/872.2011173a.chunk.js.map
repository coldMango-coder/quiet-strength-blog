{"version":3,"file":"static/js/872.2011173a.chunk.js","mappings":"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","sources":["components/BlogCard.js","pages/BlogListPage.js","components/Seo.js","lib/seo/getCanonicalUrl.js"],"sourcesContent":["import React from 'react';\r\nimport NormalizedLink from './NormalizedLink';\r\nimport OptimizedImage from './OptimizedImage';\r\n\r\nconst BlogCard = ({ post, onReadMore, linkTo }) => {\r\n  const { title, description, category, image, datePublished, readingTime, slug } = post;\r\n\r\n  return (\r\n    <article className=\"w-full max-w-full rounded-lg border border-gray-200 shadow-md bg-white flex flex-col overflow-hidden transform hover:-translate-y-1 transition-transform duration-300\" itemScope itemType=\"https://schema.org/BlogPosting\">\r\n      <div className=\"overflow-hidden\">\r\n        <OptimizedImage \r\n          className=\"w-full h-48 transform hover:scale-105 transition-transform duration-300\" \r\n          src={image} \r\n          alt={`${title} - Self-help article for introverted women`}\r\n          width={400}\r\n          height={192}\r\n          loading=\"lazy\"\r\n          sizes=\"(max-width: 768px) 100vw, (max-width: 1200px) 50vw, 400px\"\r\n          itemProp=\"image\"\r\n        />\r\n      </div>\r\n      <div className=\"p-4 sm:p-6 flex flex-col flex-grow min-w-0 max-w-full\">\r\n        <span className=\"text-sm font-semibold text-brand-emphasis mb-2 break-words\" itemProp=\"articleSection\">{category}</span>\r\n        <h3 className=\"text-lg sm:text-xl font-bold text-brand-dark mb-2 leading-tight break-words max-w-full\" itemProp=\"headline\">\r\n          {title}\r\n        </h3>\r\n        <p className=\"text-gray-600 text-sm sm:text-base mb-4 flex-grow leading-relaxed break-words max-w-full\" itemProp=\"description\">\r\n          {description}\r\n        </p>\r\n        \r\n        {/* Article metadata */}\r\n        <div className=\"flex flex-col sm:flex-row sm:justify-between sm:items-center text-xs sm:text-sm text-gray-500 mb-4 gap-1 sm:gap-2 min-w-0\">\r\n          {datePublished && (\r\n            <time dateTime={datePublished} itemProp=\"datePublished\" className=\"flex-shrink-0\">\r\n              {new Date(datePublished).toLocaleDateString('en-US', { \r\n                year: 'numeric', \r\n                month: 'short', \r\n                day: 'numeric' \r\n              })}\r\n            </time>\r\n          )}\r\n          {readingTime && (\r\n            <span className=\"text-brand-primary flex-shrink-0\">\r\n              {readingTime} min read\r\n            </span>\r\n          )}\r\n        </div>\r\n        \r\n        {linkTo ? (\r\n          <NormalizedLink\r\n            to={linkTo}\r\n            className=\"font-semibold text-brand-emphasis hover:underline text-left self-start mt-auto\"\r\n            aria-label={`Read full article: ${title}`}\r\n          >\r\n            Read More &rarr;\r\n          </NormalizedLink>\r\n        ) : (\r\n          <button\r\n            onClick={onReadMore}\r\n            className=\"font-semibold text-brand-emphasis hover:underline text-left self-start mt-auto\"\r\n            aria-label={`Read full article: ${title}`}\r\n          >\r\n            Read More &rarr;\r\n          </button>\r\n        )}\r\n        \r\n        {/* Hidden schema markup */}\r\n        <div className=\"sr-only\">\r\n          <span itemProp=\"author\" itemScope itemType=\"https://schema.org/Person\">\r\n            <span itemProp=\"name\">Marica Šinko</span>\r\n          </span>\r\n          <meta itemProp=\"url\" content={`${(process.env.REACT_APP_SITE_URL || (typeof window !== 'undefined' ? window.location.origin : ''))}/blog/${slug}`} />\n        </div>\n      </div>\r\n    </article>\r\n  );\r\n};\r\n\r\nexport default BlogCard;\n","import React, { useState } from 'react';\nimport NormalizedLink from '../components/NormalizedLink';\nimport { Helmet } from 'react-helmet-async';\nimport { sortedBlogPosts, categories, categorySlugMap } from '../blogData';\nimport BlogCard from '../components/BlogCard';\nimport Seo from '../components/Seo';\n\nconst BlogListPage = () => {\n  const [selectedCategory, setSelectedCategory] = useState(null);\n\n  const handleCategoryChange = (newCategory) => {\n    setSelectedCategory(newCategory);\n    window.scrollTo(0, 0);\n  };\n\n  const filteredPosts = selectedCategory\n   ? sortedBlogPosts.filter(p => p.category === selectedCategory)\n   : sortedBlogPosts;\n\n  const baseUrl = process.env.REACT_APP_SITE_URL || (typeof window !== 'undefined' ? window.location.origin : '');\n  const canonicalUrl = selectedCategory\n    ? `${baseUrl}/blog?category=${categorySlugMap[selectedCategory] || selectedCategory}`\n    : `${baseUrl}/blog`;\n\n  return (\n    <>\n      <Helmet>\n        <link rel=\"canonical\" href={canonicalUrl} />\n      </Helmet>\n      <div className=\"bg-white\">\n        <Seo\n          title={selectedCategory ? `${selectedCategory} Articles` : 'Blog'}\n          description={`Read all blog posts${selectedCategory ? ` in the ${selectedCategory} category` : ''}.`}\n          path={selectedCategory ? `/blog?category=${categorySlugMap[selectedCategory] || selectedCategory}` : '/blog'}\n          breadcrumbs={[\n            { name: 'Home', item: '/' },\n            { name: 'Blog', item: '/blog' },\n            ...(selectedCategory ? [{ name: selectedCategory, item: `/blog?category=${categorySlugMap[selectedCategory] || selectedCategory}` }] : []),\n          ]}\n        />\n        <div className=\"container mx-auto px-6 py-12\">\n          <NormalizedLink to=\"/\" className=\"text-indigo-600 hover:text-indigo-800 font-semibold mb-8 inline-block\">&larr; Back to Home</NormalizedLink>\n          <h2 className=\"text-4xl font-bold text-center mb-12 text-slate-800\">{selectedCategory || 'From the Blog'}</h2>\n          \n          {/* Category Navigation */}\n          <div className=\"flex flex-wrap justify-center gap-4 mb-12\">\n            <button\n              onClick={() => handleCategoryChange(null)}\n              className={`px-6 py-3 rounded-full font-semibold transition-colors ${\n                !selectedCategory \n                  ? 'bg-brand-dark text-white' \n                  : 'bg-gray-200 text-gray-700 hover:bg-gray-300'\n              }`}\n            >\n              All Articles\n            </button>\n            {Object.values(categories).map((categoryName) => (\n              <button\n                key={categoryName}\n                onClick={() => handleCategoryChange(categoryName)}\n                className={`px-6 py-3 rounded-full font-semibold transition-colors ${\n                  selectedCategory === categoryName \n                    ? 'bg-brand-dark text-white' \n                    : 'bg-gray-200 text-gray-700 hover:bg-gray-300'\n                }`}\n              >\n                {categoryName}\n              </button>\n            ))}\n          </div>\n          \n          {!selectedCategory && (\n            <section className=\"mb-16\">\n              <h3 className=\"text-2xl font-bold text-slate-800 mb-6\">Latest Post</h3>\n              <div className=\"flex justify-center\">\n                <BlogCard\n                  post={sortedBlogPosts[0]}\n                  linkTo={`/blog/${sortedBlogPosts[0].slug}`}\n                />\n              </div>\n            </section>\n          )}\n\n          <section>\n            <h3 className=\"text-2xl font-bold text-slate-800 mb-6\">{selectedCategory ? 'Posts' : 'All Posts'}</h3>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8\">\n              {filteredPosts.map((post) => (\n                <BlogCard\n                  key={post.slug}\n                  post={post}\n                  linkTo={`/blog/${post.slug}`}\n                />\n              ))}\n            </div>\n          </section>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default BlogListPage;\n","import React from 'react';\r\nimport { Helmet } from 'react-helmet-async';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { getCanonicalUrl } from '../lib/seo/getCanonicalUrl';\r\nimport { useDynamicSEO } from '../hooks/useDynamicSEO';\r\n\r\nconst Seo = ({ title, description, type = 'website', path, article, book, person, breadcrumbs }) => {\r\n  const location = useLocation();\r\n  const siteName = 'Quiet Strength';\n  const baseUrl = process.env.REACT_APP_SITE_URL || (typeof window !== 'undefined' ? window.location.origin : '');\n  \r\n  // Use dynamic SEO hook for client-side updates\r\n  useDynamicSEO();\r\n  \r\n  // Use the provided path or automatically detect from current location\r\n  const currentPath = path || location.pathname + location.search;\r\n  const canonicalUrl = getCanonicalUrl(currentPath);\r\n  const url = canonicalUrl;\r\n\r\n  const schema = [];\r\n\r\n  const baseSchema = {\r\n    '@context': 'https://schema.org',\r\n  };\r\n\r\n  if (type === 'article' && article) {\r\n    schema.push({\r\n      ...baseSchema,\r\n      '@type': 'BlogPosting',\r\n      mainEntityOfPage: {\r\n        '@type': 'WebPage',\r\n        '@id': canonicalUrl\r\n      },\r\n      headline: article.title,\r\n      description: description,\r\n      image: article.image ? [`${baseUrl}${article.image}`] : [`${baseUrl}/images/logo.png`],\r\n      author: {\n        '@type': 'Person',\n        name: article.authorName || 'Marica Šinko',\n        url: `${baseUrl}/author/marica-sinko`,\n      },\n      publisher: {\r\n        '@type': 'Organization',\r\n        name: siteName,\r\n        logo: {\r\n          '@type': 'ImageObject',\r\n          url: `${baseUrl}/images/logo.png`\r\n        }\r\n      },\r\n      datePublished: article.datePublished,\r\n      dateModified: article.dateModified || article.datePublished,\r\n      ...(article.readTime && { timeRequired: article.readTime }),\r\n      ...(article.keywords && { keywords: Array.isArray(article.keywords) ? article.keywords : article.keywords.split(',').map(k => k.trim()) }),\r\n      ...(article.category && { articleSection: article.category })\r\n    });\r\n  } else if (type === 'book' && book) {\r\n    schema.push({\r\n      ...baseSchema,\r\n      '@type': 'Book',\r\n      name: book.title,\r\n      author: {\r\n        '@type': 'Person',\r\n        name: book.authorName,\r\n      },\r\n      description: description,\r\n      ...(book.isbn && { isbn: book.isbn }),\r\n    });\r\n  } else if (type === 'person' && person) {\r\n    schema.push({\r\n      ...baseSchema,\r\n      '@type': 'Person',\r\n      name: person.name,\r\n      url: url,\r\n      ...(person.jobTitle && { jobTitle: person.jobTitle }),\r\n      ...(person.image && { image: `${baseUrl}${person.image}` }),\r\n    });\r\n  } else {\r\n    schema.push({\r\n      ...baseSchema,\r\n      '@type': 'WebSite',\r\n      name: siteName,\r\n      url: url,\r\n      potentialAction: {\r\n        '@type': 'SearchAction',\r\n        target: `${baseUrl}/search?q={search_term_string}`,\r\n        'query-input': 'required name=search_term_string'\r\n      }\r\n    });\r\n    \r\n    // Add Organization schema for homepage\r\n    if (currentPath === '/') {\r\n      schema.push({\r\n        ...baseSchema,\r\n        '@type': 'Organization',\r\n        name: siteName,\r\n        url: baseUrl,\r\n        logo: `${baseUrl}/images/logo.png`,\r\n        description: 'Self-help and productivity blog for introverted women',\r\n        sameAs: [\r\n          // Add your social media URLs here\r\n          // 'https://twitter.com/yourhandle',\r\n          // 'https://facebook.com/yourpage',\r\n          // 'https://instagram.com/yourhandle'\r\n        ]\r\n      });\r\n    }\r\n  }\r\n\r\n  if (breadcrumbs) {\r\n    schema.push({\r\n      ...baseSchema,\r\n      '@type': 'BreadcrumbList',\r\n      itemListElement: breadcrumbs.map((crumb, index) => ({\r\n        '@type': 'ListItem',\r\n        position: index + 1,\r\n        name: crumb.name,\r\n        item: `${baseUrl}${crumb.item}`,\r\n      })),\r\n    });\r\n  }\r\n\r\n  // Let React Helmet handle deduplication automatically\r\n\r\n  return (\r\n    <Helmet>\r\n      <title>{title ? `${title} | ${siteName}` : siteName}</title>\r\n      <meta name=\"description\" content={description} />\r\n      <link rel=\"canonical\" href={canonicalUrl} />\r\n\r\n      {/* Open Graph */}\r\n      <meta property=\"og:title\" content={article?.ogTitle || `${title} | ${siteName}`} />\r\n      <meta property=\"og:description\" content={article?.ogDescription || description} />\r\n      <meta property=\"og:url\" content={url} />\r\n      <meta property=\"og:type\" content={type} />\r\n      <meta property=\"og:site_name\" content={siteName} />\r\n      <meta property=\"og:locale\" content=\"en_US\" />\r\n      {(article?.ogImage || article?.image) && (\r\n        <>\r\n          <meta property=\"og:image\" content={`${baseUrl}${article.ogImage || article.image}`} />\r\n          <meta property=\"og:image:width\" content=\"1200\" />\r\n          <meta property=\"og:image:height\" content=\"630\" />\r\n          <meta property=\"og:image:alt\" content={article?.ogTitle || title} />\r\n        </>\r\n      )}\r\n      {type === 'article' && article && (\r\n        <>\r\n          <meta property=\"article:published_time\" content={article.datePublished} />\r\n          {article.dateModified && <meta property=\"article:modified_time\" content={article.dateModified} />}\r\n          <meta property=\"article:author\" content={article.authorName || 'Marica Šinko'} />\r\n          {article.category && <meta property=\"article:section\" content={article.category} />}\r\n          {article.keywords && article.keywords.map((tag, index) => \r\n            <meta key={index} property=\"article:tag\" content={tag.trim()} />\r\n          )}\r\n        </>\r\n      )}\r\n\r\n      {/* Twitter */}\r\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\r\n      <meta name=\"twitter:site\" content=\"@QuietStrengthGuide\" />\r\n      <meta name=\"twitter:creator\" content=\"@MaricaSinko\" />\r\n      <meta name=\"twitter:title\" content={article?.twitterTitle || article?.ogTitle || `${title} | ${siteName}`} />\r\n      <meta name=\"twitter:description\" content={article?.twitterDescription || article?.ogDescription || description} />\r\n      <meta name=\"twitter:url\" content={url} />\r\n      {(article?.twitterImage || article?.ogImage || article?.image) && (\r\n        <>\r\n          <meta name=\"twitter:image\" content={`${baseUrl}${article.twitterImage || article.ogImage || article.image}`} />\r\n          <meta name=\"twitter:image:alt\" content={article?.twitterTitle || article?.ogTitle || title} />\r\n        </>\r\n      )}\r\n\r\n      {/* JSON-LD Schema */}\r\n      <script type=\"application/ld+json\">{JSON.stringify(schema.length > 1 ? schema : schema[0])}</script>\r\n    </Helmet>\r\n  );\r\n};\r\n\r\nexport default Seo;\n","/**\r\n * Generates canonical URLs for trueallyguide.com pages\r\n * Ensures EXACT match between canonical URLs and live page URLs\r\n * @param {string} pathname - The pathname from router (e.g., '/blog/post')\r\n * @returns {string} - The canonical URL that exactly matches the live URL\r\n */\r\nexport function getCanonicalUrl(pathname) {\n  // Use environment variable for base URL, with fallback to current origin\n  const baseUrl = process.env.REACT_APP_SITE_URL || (typeof window !== 'undefined' ? window.location.origin : 'http://localhost:5173');\n  \r\n  // Normalize pathname with strict rules\r\n  let normalizedPath = pathname || '/';\r\n  \r\n  // Remove query parameters and hash\r\n  normalizedPath = normalizedPath.split('?')[0].split('#')[0];\r\n  \r\n  // Convert to lowercase for consistency\r\n  normalizedPath = normalizedPath.toLowerCase();\r\n  \r\n  // Remove trailing slash except for root\n  if (normalizedPath !== '/' && normalizedPath.endsWith('/')) {\n    normalizedPath = normalizedPath.slice(0, -1);\n  }\n  \r\n  // Construct canonical URL\r\n  return `${baseUrl}${normalizedPath}`;\n}\n"],"names":["_ref","post","onReadMore","linkTo","title","description","category","image","datePublished","readingTime","slug","_jsxs","className","itemScope","itemType","children","_jsx","OptimizedImage","src","alt","concat","width","height","loading","sizes","itemProp","dateTime","Date","toLocaleDateString","year","month","day","NormalizedLink","to","onClick","content","process","BlogListPage","selectedCategory","setSelectedCategory","useState","handleCategoryChange","newCategory","window","scrollTo","filteredPosts","sortedBlogPosts","filter","p","baseUrl","canonicalUrl","categorySlugMap","_Fragment","Helmet","rel","href","Seo","path","breadcrumbs","name","item","Object","values","categories","map","categoryName","BlogCard","type","article","book","person","location","useLocation","siteName","useDynamicSEO","currentPath","pathname","search","normalizedPath","split","toLowerCase","endsWith","slice","getCanonicalUrl","url","schema","baseSchema","push","_objectSpread","mainEntityOfPage","headline","author","authorName","publisher","logo","dateModified","readTime","timeRequired","keywords","Array","isArray","k","trim","articleSection","isbn","jobTitle","potentialAction","target","sameAs","itemListElement","crumb","index","position","property","ogTitle","ogDescription","ogImage","tag","twitterTitle","twitterDescription","twitterImage","JSON","stringify","length"],"sourceRoot":""}