{"version":3,"file":"static/js/625.a7e91908.chunk.js","mappings":"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","sources":["../node_modules/motion-dom/dist/es/render/utils/keys-transform.mjs","../node_modules/motion-dom/dist/es/render/dom/parse-transform.mjs","../node_modules/motion-dom/dist/es/animation/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/motion-dom/dist/es/utils/mix/number.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/motion-dom/dist/es/render/utils/keys-position.mjs","../node_modules/motion-utils/dist/es/clamp.mjs","../node_modules/motion-dom/dist/es/value/types/numbers/index.mjs","../node_modules/motion-dom/dist/es/value/types/numbers/units.mjs","../node_modules/motion-dom/dist/es/value/types/test.mjs","../node_modules/motion-dom/dist/es/value/types/dimensions.mjs","../node_modules/motion-dom/dist/es/value/types/auto.mjs","../node_modules/motion-utils/dist/es/is-numerical-string.mjs","../node_modules/motion-dom/dist/es/animation/utils/css-variables-conversion.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/utils/unit-conversion.mjs","../node_modules/motion-utils/dist/es/noop.mjs","../node_modules/motion-utils/dist/es/global-config.mjs","../node_modules/motion-dom/dist/es/frameloop/order.mjs","../node_modules/motion-dom/dist/es/stats/buffer.mjs","../node_modules/motion-dom/dist/es/frameloop/batcher.mjs","../node_modules/motion-dom/dist/es/frameloop/render-step.mjs","../node_modules/motion-dom/dist/es/frameloop/frame.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/KeyframesResolver.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/utils/fill-wildcards.mjs","../node_modules/motion-utils/dist/es/is-zero-value-string.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/utils/is-none.mjs","../node_modules/motion-dom/dist/es/value/types/utils/sanitize.mjs","../node_modules/motion-dom/dist/es/value/types/utils/float-regex.mjs","../node_modules/motion-dom/dist/es/value/types/utils/single-color-regex.mjs","../node_modules/motion-dom/dist/es/value/types/color/utils.mjs","../node_modules/motion-dom/dist/es/value/types/utils/is-nullish.mjs","../node_modules/motion-dom/dist/es/value/types/color/rgba.mjs","../node_modules/motion-dom/dist/es/value/types/color/hex.mjs","../node_modules/motion-dom/dist/es/value/types/color/hsla.mjs","../node_modules/motion-dom/dist/es/value/types/color/index.mjs","../node_modules/motion-dom/dist/es/value/types/utils/color-regex.mjs","../node_modules/motion-dom/dist/es/value/types/complex/index.mjs","../node_modules/motion-dom/dist/es/value/types/complex/filter.mjs","../node_modules/motion-dom/dist/es/value/types/int.mjs","../node_modules/motion-dom/dist/es/value/types/maps/transform.mjs","../node_modules/motion-dom/dist/es/value/types/maps/number.mjs","../node_modules/motion-dom/dist/es/value/types/maps/defaults.mjs","../node_modules/motion-dom/dist/es/value/types/utils/animatable-none.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/utils/make-none-animatable.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/DOMKeyframesResolver.mjs","../node_modules/motion-dom/dist/es/value/utils/is-motion-value.mjs","../node_modules/motion-dom/dist/es/frameloop/sync-time.mjs","../node_modules/motion-utils/dist/es/array.mjs","../node_modules/motion-utils/dist/es/subscription-manager.mjs","../node_modules/motion-utils/dist/es/velocity-per-second.mjs","../node_modules/motion-dom/dist/es/value/index.mjs","../node_modules/motion-dom/dist/es/value/types/utils/find.mjs","../node_modules/motion-dom/dist/es/frameloop/microtask.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/motion-dom/dist/es/value/types/utils/get-as-type.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/framer-motion/dist/es/render/html/use-html-visual-state.mjs","../node_modules/framer-motion/dist/es/render/svg/use-svg-visual-state.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/render/components/create-proxy.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/motion-dom/dist/es/animation/utils/get-value-transition.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/add-will-change.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/get-appear-id.mjs","../node_modules/motion-dom/dist/es/animation/utils/make-animation-instant.mjs","../node_modules/motion-utils/dist/es/pipe.mjs","../node_modules/motion-utils/dist/es/time-conversion.mjs","../node_modules/motion-dom/dist/es/stats/animation-count.mjs","../node_modules/motion-dom/dist/es/value/types/color/hsla-to-rgba.mjs","../node_modules/motion-dom/dist/es/utils/mix/immediate.mjs","../node_modules/motion-dom/dist/es/utils/mix/color.mjs","../node_modules/motion-dom/dist/es/utils/mix/visibility.mjs","../node_modules/motion-dom/dist/es/utils/mix/complex.mjs","../node_modules/motion-dom/dist/es/utils/mix/index.mjs","../node_modules/motion-dom/dist/es/animation/drivers/frame.mjs","../node_modules/motion-dom/dist/es/animation/waapi/utils/linear.mjs","../node_modules/motion-dom/dist/es/animation/generators/utils/calc-duration.mjs","../node_modules/motion-dom/dist/es/animation/generators/utils/velocity.mjs","../node_modules/motion-dom/dist/es/animation/generators/spring/defaults.mjs","../node_modules/motion-dom/dist/es/animation/generators/spring/find.mjs","../node_modules/motion-dom/dist/es/animation/generators/spring/index.mjs","../node_modules/motion-dom/dist/es/animation/generators/inertia.mjs","../node_modules/motion-dom/dist/es/animation/generators/utils/create-generator-easing.mjs","../node_modules/motion-utils/dist/es/easing/cubic-bezier.mjs","../node_modules/motion-utils/dist/es/easing/ease.mjs","../node_modules/motion-utils/dist/es/easing/modifiers/mirror.mjs","../node_modules/motion-utils/dist/es/easing/modifiers/reverse.mjs","../node_modules/motion-utils/dist/es/easing/back.mjs","../node_modules/motion-utils/dist/es/easing/anticipate.mjs","../node_modules/motion-utils/dist/es/easing/circ.mjs","../node_modules/motion-utils/dist/es/easing/utils/is-bezier-definition.mjs","../node_modules/motion-utils/dist/es/easing/utils/map.mjs","../node_modules/motion-utils/dist/es/progress.mjs","../node_modules/motion-dom/dist/es/utils/interpolate.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/offsets/default.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/offsets/fill.mjs","../node_modules/motion-dom/dist/es/animation/generators/keyframes.mjs","../node_modules/motion-utils/dist/es/easing/utils/is-easing-array.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/offsets/time.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/get-final.mjs","../node_modules/motion-dom/dist/es/animation/utils/replace-transition-type.mjs","../node_modules/motion-dom/dist/es/animation/utils/WithPromise.mjs","../node_modules/motion-dom/dist/es/animation/JSAnimation.mjs","../node_modules/motion-utils/dist/es/memo.mjs","../node_modules/motion-dom/dist/es/utils/supports/scroll-timeline.mjs","../node_modules/motion-dom/dist/es/utils/supports/flags.mjs","../node_modules/motion-dom/dist/es/utils/supports/memo.mjs","../node_modules/motion-dom/dist/es/utils/supports/linear-easing.mjs","../node_modules/motion-dom/dist/es/animation/waapi/easing/cubic-bezier.mjs","../node_modules/motion-dom/dist/es/animation/waapi/easing/supported.mjs","../node_modules/motion-dom/dist/es/animation/waapi/easing/map-easing.mjs","../node_modules/motion-dom/dist/es/animation/waapi/start-waapi-animation.mjs","../node_modules/motion-dom/dist/es/animation/generators/utils/is-generator.mjs","../node_modules/motion-dom/dist/es/animation/NativeAnimation.mjs","../node_modules/motion-dom/dist/es/animation/waapi/utils/apply-generator.mjs","../node_modules/motion-dom/dist/es/render/dom/style-set.mjs","../node_modules/motion-dom/dist/es/render/dom/is-css-var.mjs","../node_modules/motion-dom/dist/es/animation/waapi/utils/unsupported-easing.mjs","../node_modules/motion-dom/dist/es/animation/NativeAnimationExtended.mjs","../node_modules/motion-dom/dist/es/animation/utils/is-animatable.mjs","../node_modules/motion-dom/dist/es/animation/waapi/supports/waapi.mjs","../node_modules/motion-dom/dist/es/animation/AsyncMotionValueAnimation.mjs","../node_modules/motion-dom/dist/es/animation/utils/can-animate.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-transition-defined.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/animation/utils/calc-child-stagger.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/get-variant-context.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/motion-dom/dist/es/gestures/drag/state/is-active.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/motion-dom/dist/es/gestures/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/utils/get-context-window.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/motion-dom/dist/es/gestures/drag/state/set-active.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/motion-utils/dist/es/is-object.mjs","../node_modules/motion-dom/dist/es/utils/is-svg-element.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/motion-dom/dist/es/utils/is-svg-svg-element.mjs","../node_modules/framer-motion/dist/es/animation/animate/single-value.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/motion-dom/dist/es/gestures/utils/setup.mjs","../node_modules/motion-dom/dist/es/utils/resolve-elements.mjs","../node_modules/motion-dom/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/motion-dom/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/motion-dom/dist/es/gestures/press/utils/is-keyboard-accessible.mjs","../node_modules/motion-dom/dist/es/gestures/press/utils/state.mjs","../node_modules/motion-dom/dist/es/gestures/press/utils/keyboard.mjs","../node_modules/motion-dom/dist/es/gestures/press/index.mjs","../node_modules/motion-dom/dist/es/utils/is-html-element.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/render/components/motion/proxy.mjs","../node_modules/framer-motion/dist/es/render/components/motion/feature-bundle.mjs"],"sourcesContent":["/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = /*@__PURE__*/ (() => new Set(transformPropOrder))();\n\nexport { transformPropOrder, transformProps };\n","const radToDeg = (rad) => (rad * 180) / Math.PI;\nconst rotate = (v) => {\n    const angle = radToDeg(Math.atan2(v[1], v[0]));\n    return rebaseAngle(angle);\n};\nconst matrix2dParsers = {\n    x: 4,\n    y: 5,\n    translateX: 4,\n    translateY: 5,\n    scaleX: 0,\n    scaleY: 3,\n    scale: (v) => (Math.abs(v[0]) + Math.abs(v[3])) / 2,\n    rotate,\n    rotateZ: rotate,\n    skewX: (v) => radToDeg(Math.atan(v[1])),\n    skewY: (v) => radToDeg(Math.atan(v[2])),\n    skew: (v) => (Math.abs(v[1]) + Math.abs(v[2])) / 2,\n};\nconst rebaseAngle = (angle) => {\n    angle = angle % 360;\n    if (angle < 0)\n        angle += 360;\n    return angle;\n};\nconst rotateZ = rotate;\nconst scaleX = (v) => Math.sqrt(v[0] * v[0] + v[1] * v[1]);\nconst scaleY = (v) => Math.sqrt(v[4] * v[4] + v[5] * v[5]);\nconst matrix3dParsers = {\n    x: 12,\n    y: 13,\n    z: 14,\n    translateX: 12,\n    translateY: 13,\n    translateZ: 14,\n    scaleX,\n    scaleY,\n    scale: (v) => (scaleX(v) + scaleY(v)) / 2,\n    rotateX: (v) => rebaseAngle(radToDeg(Math.atan2(v[6], v[5]))),\n    rotateY: (v) => rebaseAngle(radToDeg(Math.atan2(-v[2], v[0]))),\n    rotateZ,\n    rotate: rotateZ,\n    skewX: (v) => radToDeg(Math.atan(v[4])),\n    skewY: (v) => radToDeg(Math.atan(v[1])),\n    skew: (v) => (Math.abs(v[1]) + Math.abs(v[4])) / 2,\n};\nfunction defaultTransformValue(name) {\n    return name.includes(\"scale\") ? 1 : 0;\n}\nfunction parseValueFromTransform(transform, name) {\n    if (!transform || transform === \"none\") {\n        return defaultTransformValue(name);\n    }\n    const matrix3dMatch = transform.match(/^matrix3d\\(([-\\d.e\\s,]+)\\)$/u);\n    let parsers;\n    let match;\n    if (matrix3dMatch) {\n        parsers = matrix3dParsers;\n        match = matrix3dMatch;\n    }\n    else {\n        const matrix2dMatch = transform.match(/^matrix\\(([-\\d.e\\s,]+)\\)$/u);\n        parsers = matrix2dParsers;\n        match = matrix2dMatch;\n    }\n    if (!match) {\n        return defaultTransformValue(name);\n    }\n    const valueParser = parsers[name];\n    const values = match[1].split(\",\").map(convertTransformToNumber);\n    return typeof valueParser === \"function\"\n        ? valueParser(values)\n        : values[valueParser];\n}\nconst readTransformValue = (instance, name) => {\n    const { transform = \"none\" } = getComputedStyle(instance);\n    return parseValueFromTransform(transform, name);\n};\nfunction convertTransformToNumber(value) {\n    return parseFloat(value.trim());\n}\n\nexport { defaultTransformValue, parseValueFromTransform, readTransformValue };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = \n/*@__PURE__*/ checkStringStartsWith(\"--\");\nconst startsAsVariableToken = \n/*@__PURE__*/ checkStringStartsWith(\"var(--\");\nconst isCSSVariableToken = (value) => {\n    const startsWithToken = startsAsVariableToken(value);\n    if (!startsWithToken)\n        return false;\n    // Ensure any comments are stripped from the value as this can harm performance of the regex.\n    return singleCssVariableRegex.test(value.split(\"/*\")[0].trim());\n};\nconst singleCssVariableRegex = /var\\(--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)$/iu;\n\nexport { isCSSVariableName, isCSSVariableToken };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mixNumber = (from, to, progress) => {\n    return from + (to - from) * progress;\n};\n\nexport { mixNumber };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY ||\n        values.skewX ||\n        values.skewY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mixNumber } from 'motion-dom';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\nconst TREE_SCALE_SNAP_MIN = 0.999999999999;\nconst TREE_SCALE_SNAP_MAX = 1.0000000000001;\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const { visualElement } = node.options;\n        if (visualElement &&\n            visualElement.props.style &&\n            visualElement.props.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    if (treeScale.x < TREE_SCALE_SNAP_MAX &&\n        treeScale.x > TREE_SCALE_SNAP_MIN) {\n        treeScale.x = 1.0;\n    }\n    if (treeScale.y < TREE_SCALE_SNAP_MAX &&\n        treeScale.y > TREE_SCALE_SNAP_MIN) {\n        treeScale.y = 1.0;\n    }\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, axisTranslate, axisScale, boxScale, axisOrigin = 0.5) {\n    const originPoint = mixNumber(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, axisTranslate, axisScale, originPoint, boxScale);\n}\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform.x, transform.scaleX, transform.scale, transform.originX);\n    transformAxis(box.y, transform.y, transform.scaleY, transform.scale, transform.originY);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","import { transformPropOrder } from './keys-transform.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    ...transformPropOrder,\n]);\n\nexport { positionalKeys };\n","const clamp = (min, max, v) => {\n    if (v > max)\n        return max;\n    if (v < min)\n        return min;\n    return v;\n};\n\nexport { clamp };\n","import { clamp } from 'motion-utils';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/*#__NO_SIDE_EFFECTS__*/\nconst createUnitType = (unit) => ({\n    test: (v) => typeof v === \"string\" && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = /*@__PURE__*/ createUnitType(\"deg\");\nconst percent = /*@__PURE__*/ createUnitType(\"%\");\nconst px = /*@__PURE__*/ createUnitType(\"px\");\nconst vh = /*@__PURE__*/ createUnitType(\"vh\");\nconst vw = /*@__PURE__*/ createUnitType(\"vw\");\nconst progressPercentage = /*@__PURE__*/ (() => ({\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n}))();\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { auto } from './auto.mjs';\nimport { number } from './numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from './numbers/units.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)$/u.test(v);\n\nexport { isNumericalString };\n","import { invariant, isNumericalString } from 'motion-utils';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = \n// eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive, as it can match a lot of words\n/^var\\(--(?:([\\w-]+)|([\\w-]+), ?([a-zA-Z\\d ()%#.,-]+))\\)/u;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token1, token2, fallback] = match;\n    return [`--${token1 ?? token2}`, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`, \"max-css-var-depth\");\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    return isCSSVariableToken(fallback)\n        ? getVariableValue(fallback, element, depth + 1)\n        : fallback;\n}\n\nexport { getVariableValue, parseCSSVariable };\n","import { parseValueFromTransform } from '../../../render/dom/parse-transform.mjs';\nimport { transformPropOrder } from '../../../render/utils/keys-transform.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst isNumOrPxType = (v) => v === number || v === px;\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: (_bbox, { transform }) => parseValueFromTransform(transform, \"x\"),\n    y: (_bbox, { transform }) => parseValueFromTransform(transform, \"y\"),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\n\nexport { isNumOrPxType, positionalValues, removeNonTranslationalTransform };\n","/*#__NO_SIDE_EFFECTS__*/\nconst noop = (any) => any;\n\nexport { noop };\n","const MotionGlobalConfig = {};\n\nexport { MotionGlobalConfig };\n","const stepsOrder = [\n    \"setup\", // Compute\n    \"read\", // Read\n    \"resolveKeyframes\", // Write/Read/Write/Read\n    \"preUpdate\", // Compute\n    \"update\", // Compute\n    \"preRender\", // Compute\n    \"render\", // Write\n    \"postRender\", // Compute\n];\n\nexport { stepsOrder };\n","const statsBuffer = {\n    value: null,\n    addProjectionMetrics: null,\n};\n\nexport { statsBuffer };\n","import { MotionGlobalConfig } from 'motion-utils';\nimport { stepsOrder } from './order.mjs';\nimport { createRenderStep } from './render-step.mjs';\n\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    const flagRunNextFrame = () => (runNextFrame = true);\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(flagRunNextFrame, allowKeepAlive ? key : undefined);\n        return acc;\n    }, {});\n    const { setup, read, resolveKeyframes, preUpdate, update, preRender, render, postRender, } = steps;\n    const processBatch = () => {\n        const timestamp = MotionGlobalConfig.useManualTiming\n            ? state.timestamp\n            : performance.now();\n        runNextFrame = false;\n        if (!MotionGlobalConfig.useManualTiming) {\n            state.delta = useDefaultElapsed\n                ? 1000 / 60\n                : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        }\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        // Unrolled render loop for better per-frame performance\n        setup.process(state);\n        read.process(state);\n        resolveKeyframes.process(state);\n        preUpdate.process(state);\n        update.process(state);\n        preRender.process(state);\n        render.process(state);\n        postRender.process(state);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => {\n        for (let i = 0; i < stepsOrder.length; i++) {\n            steps[stepsOrder[i]].cancel(process);\n        }\n    };\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher };\n","import { statsBuffer } from '../stats/buffer.mjs';\n\nfunction createRenderStep(runNextFrame, stepName) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Set();\n    let nextFrame = new Set();\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    let latestFrameData = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    let numCalls = 0;\n    function triggerCallback(callback) {\n        if (toKeepAlive.has(callback)) {\n            step.schedule(callback);\n            runNextFrame();\n        }\n        numCalls++;\n        callback(latestFrameData);\n    }\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (!queue.has(callback))\n                queue.add(callback);\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.delete(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            latestFrameData = frameData;\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Execute this frame\n            thisFrame.forEach(triggerCallback);\n            /**\n             * If we're recording stats then\n             */\n            if (stepName && statsBuffer.value) {\n                statsBuffer.value.frameloop[stepName].push(numCalls);\n            }\n            numCalls = 0;\n            // Clear the frame so no callbacks remain. This is to avoid\n            // memory leaks should this render step not run for a while.\n            thisFrame.clear();\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { noop } from 'motion-utils';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps: frameSteps, } = /* @__PURE__ */ createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, frameSteps };\n","import { fillWildcards } from './utils/fill-wildcards.mjs';\nimport { removeNonTranslationalTransform } from './utils/unit-conversion.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst toResolve = new Set();\nlet isScheduled = false;\nlet anyNeedsMeasurement = false;\nlet isForced = false;\nfunction measureAllKeyframes() {\n    if (anyNeedsMeasurement) {\n        const resolversToMeasure = Array.from(toResolve).filter((resolver) => resolver.needsMeasurement);\n        const elementsToMeasure = new Set(resolversToMeasure.map((resolver) => resolver.element));\n        const transformsToRestore = new Map();\n        /**\n         * Write pass\n         * If we're measuring elements we want to remove bounding box-changing transforms.\n         */\n        elementsToMeasure.forEach((element) => {\n            const removedTransforms = removeNonTranslationalTransform(element);\n            if (!removedTransforms.length)\n                return;\n            transformsToRestore.set(element, removedTransforms);\n            element.render();\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureInitialState());\n        // Write\n        elementsToMeasure.forEach((element) => {\n            element.render();\n            const restore = transformsToRestore.get(element);\n            if (restore) {\n                restore.forEach(([key, value]) => {\n                    element.getValue(key)?.set(value);\n                });\n            }\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureEndState());\n        // Write\n        resolversToMeasure.forEach((resolver) => {\n            if (resolver.suspendedScrollY !== undefined) {\n                window.scrollTo(0, resolver.suspendedScrollY);\n            }\n        });\n    }\n    anyNeedsMeasurement = false;\n    isScheduled = false;\n    toResolve.forEach((resolver) => resolver.complete(isForced));\n    toResolve.clear();\n}\nfunction readAllKeyframes() {\n    toResolve.forEach((resolver) => {\n        resolver.readKeyframes();\n        if (resolver.needsMeasurement) {\n            anyNeedsMeasurement = true;\n        }\n    });\n}\nfunction flushKeyframeResolvers() {\n    isForced = true;\n    readAllKeyframes();\n    measureAllKeyframes();\n    isForced = false;\n}\nclass KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element, isAsync = false) {\n        this.state = \"pending\";\n        /**\n         * Track whether this resolver is async. If it is, it'll be added to the\n         * resolver queue and flushed in the next frame. Resolvers that aren't going\n         * to trigger read/write thrashing don't need to be async.\n         */\n        this.isAsync = false;\n        /**\n         * Track whether this resolver needs to perform a measurement\n         * to resolve its keyframes.\n         */\n        this.needsMeasurement = false;\n        this.unresolvedKeyframes = [...unresolvedKeyframes];\n        this.onComplete = onComplete;\n        this.name = name;\n        this.motionValue = motionValue;\n        this.element = element;\n        this.isAsync = isAsync;\n    }\n    scheduleResolve() {\n        this.state = \"scheduled\";\n        if (this.isAsync) {\n            toResolve.add(this);\n            if (!isScheduled) {\n                isScheduled = true;\n                frame.read(readAllKeyframes);\n                frame.resolveKeyframes(measureAllKeyframes);\n            }\n        }\n        else {\n            this.readKeyframes();\n            this.complete();\n        }\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, name, element, motionValue } = this;\n        // If initial keyframe is null we need to read it from the DOM\n        if (unresolvedKeyframes[0] === null) {\n            const currentValue = motionValue?.get();\n            // TODO: This doesn't work if the final keyframe is a wildcard\n            const finalKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n            if (currentValue !== undefined) {\n                unresolvedKeyframes[0] = currentValue;\n            }\n            else if (element && name) {\n                const valueAsRead = element.readValue(name, finalKeyframe);\n                if (valueAsRead !== undefined && valueAsRead !== null) {\n                    unresolvedKeyframes[0] = valueAsRead;\n                }\n            }\n            if (unresolvedKeyframes[0] === undefined) {\n                unresolvedKeyframes[0] = finalKeyframe;\n            }\n            if (motionValue && currentValue === undefined) {\n                motionValue.set(unresolvedKeyframes[0]);\n            }\n        }\n        fillWildcards(unresolvedKeyframes);\n    }\n    setFinalKeyframe() { }\n    measureInitialState() { }\n    renderEndStyles() { }\n    measureEndState() { }\n    complete(isForcedComplete = false) {\n        this.state = \"complete\";\n        this.onComplete(this.unresolvedKeyframes, this.finalKeyframe, isForcedComplete);\n        toResolve.delete(this);\n    }\n    cancel() {\n        if (this.state === \"scheduled\") {\n            toResolve.delete(this);\n            this.state = \"pending\";\n        }\n    }\n    resume() {\n        if (this.state === \"pending\")\n            this.scheduleResolve();\n    }\n}\n\nexport { KeyframeResolver, flushKeyframeResolvers };\n","function fillWildcards(keyframes) {\n    for (let i = 1; i < keyframes.length; i++) {\n        keyframes[i] ?? (keyframes[i] = keyframes[i - 1]);\n    }\n}\n\nexport { fillWildcards };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/u.test(v);\n\nexport { isZeroValueString };\n","import { isZeroValueString } from 'motion-utils';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n    else {\n        return true;\n    }\n}\n\nexport { isNone };\n","// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\n\nexport { sanitize };\n","const floatRegex = /-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/gu;\n\nexport { floatRegex };\n","const singleColorRegex = /^(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))$/iu;\n\nexport { singleColorRegex };\n","import { floatRegex } from '../utils/float-regex.mjs';\nimport { isNullish } from '../utils/is-nullish.mjs';\nimport { singleColorRegex } from '../utils/single-color-regex.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((typeof v === \"string\" &&\n        singleColorRegex.test(v) &&\n        v.startsWith(type)) ||\n        (testProp &&\n            !isNullish(v) &&\n            Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (typeof v !== \"string\")\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","function isNullish(v) {\n    return v == null;\n}\n\nexport { isNullish };\n","import { clamp } from 'motion-utils';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: /*@__PURE__*/ isColorString(\"rgb\", \"red\"),\n    parse: /*@__PURE__*/ splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: /*@__PURE__*/ isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: /*@__PURE__*/ isColorString(\"hsl\", \"hue\"),\n    parse: /*@__PURE__*/ splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return typeof v === \"string\"\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n    getAnimatableNone: (v) => {\n        const parsed = color.parse(v);\n        parsed.alpha = 0;\n        return color.transform(parsed);\n    },\n};\n\nexport { color };\n","const colorRegex = /(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))/giu;\n\nexport { colorRegex };\n","import { color } from '../color/index.mjs';\nimport { colorRegex } from '../utils/color-regex.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\n\nfunction test(v) {\n    return (isNaN(v) &&\n        typeof v === \"string\" &&\n        (v.match(floatRegex)?.length || 0) +\n            (v.match(colorRegex)?.length || 0) >\n            0);\n}\nconst NUMBER_TOKEN = \"number\";\nconst COLOR_TOKEN = \"color\";\nconst VAR_TOKEN = \"var\";\nconst VAR_FUNCTION_TOKEN = \"var(\";\nconst SPLIT_TOKEN = \"${}\";\n// this regex consists of the `singleCssVariableRegex|rgbHSLValueRegex|digitRegex`\nconst complexRegex = /var\\s*\\(\\s*--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)|#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\)|-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/giu;\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const values = [];\n    const indexes = {\n        color: [],\n        number: [],\n        var: [],\n    };\n    const types = [];\n    let i = 0;\n    const tokenised = originalValue.replace(complexRegex, (parsedValue) => {\n        if (color.test(parsedValue)) {\n            indexes.color.push(i);\n            types.push(COLOR_TOKEN);\n            values.push(color.parse(parsedValue));\n        }\n        else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {\n            indexes.var.push(i);\n            types.push(VAR_TOKEN);\n            values.push(parsedValue);\n        }\n        else {\n            indexes.number.push(i);\n            types.push(NUMBER_TOKEN);\n            values.push(parseFloat(parsedValue));\n        }\n        ++i;\n        return SPLIT_TOKEN;\n    });\n    const split = tokenised.split(SPLIT_TOKEN);\n    return { values, split, indexes, types };\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { split, types } = analyseComplexValue(source);\n    const numSections = split.length;\n    return (v) => {\n        let output = \"\";\n        for (let i = 0; i < numSections; i++) {\n            output += split[i];\n            if (v[i] !== undefined) {\n                const type = types[i];\n                if (type === NUMBER_TOKEN) {\n                    output += sanitize(v[i]);\n                }\n                else if (type === COLOR_TOKEN) {\n                    output += color.transform(v[i]);\n                }\n                else {\n                    output += v[i];\n                }\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : color.test(v) ? color.getAnimatableNone(v) : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /\\b([a-z-]*)\\(.*?\\)/gu;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { number } from './numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../numbers/index.mjs';\nimport { degrees, px, progressPercentage } from '../numbers/units.mjs';\n\nconst transformValueTypes = {\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n};\n\nexport { transformValueTypes };\n","import { int } from '../int.mjs';\nimport { alpha } from '../numbers/index.mjs';\nimport { px } from '../numbers/units.mjs';\nimport { transformValueTypes } from './transform.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Misc\n    backgroundPositionX: px,\n    backgroundPositionY: px,\n    ...transformValueTypes,\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { color } from '../color/index.mjs';\nimport { filter } from '../complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../complex/index.mjs';\nimport { filter } from '../complex/filter.mjs';\nimport { getDefaultValueType } from '../maps/defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { analyseComplexValue } from '../../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../../../value/types/utils/animatable-none.mjs';\n\n/**\n * If we encounter keyframes like \"none\" or \"0\" and we also have keyframes like\n * \"#fff\" or \"200px 200px\" we want to find a keyframe to serve as a template for\n * the \"none\" keyframes. In this case \"#fff\" or \"200px 200px\" - then these get turned into\n * zero equivalents, i.e. \"#fff0\" or \"0px 0px\".\n */\nconst invalidTemplates = new Set([\"auto\", \"none\", \"0\"]);\nfunction makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name) {\n    let i = 0;\n    let animatableTemplate = undefined;\n    while (i < unresolvedKeyframes.length && !animatableTemplate) {\n        const keyframe = unresolvedKeyframes[i];\n        if (typeof keyframe === \"string\" &&\n            !invalidTemplates.has(keyframe) &&\n            analyseComplexValue(keyframe).values.length) {\n            animatableTemplate = unresolvedKeyframes[i];\n        }\n        i++;\n    }\n    if (animatableTemplate && name) {\n        for (const noneIndex of noneKeyframeIndexes) {\n            unresolvedKeyframes[noneIndex] = getAnimatableNone(name, animatableTemplate);\n        }\n    }\n}\n\nexport { makeNoneKeyframesAnimatable };\n","import { positionalKeys } from '../../render/utils/keys-position.mjs';\nimport { findDimensionValueType } from '../../value/types/dimensions.mjs';\nimport { getVariableValue } from '../utils/css-variables-conversion.mjs';\nimport { isCSSVariableToken } from '../utils/is-css-variable.mjs';\nimport { KeyframeResolver } from './KeyframesResolver.mjs';\nimport { isNone } from './utils/is-none.mjs';\nimport { makeNoneKeyframesAnimatable } from './utils/make-none-animatable.mjs';\nimport { isNumOrPxType, positionalValues } from './utils/unit-conversion.mjs';\n\nclass DOMKeyframesResolver extends KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element) {\n        super(unresolvedKeyframes, onComplete, name, motionValue, element, true);\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, element, name } = this;\n        if (!element || !element.current)\n            return;\n        super.readKeyframes();\n        /**\n         * If any keyframe is a CSS variable, we need to find its value by sampling the element\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            let keyframe = unresolvedKeyframes[i];\n            if (typeof keyframe === \"string\") {\n                keyframe = keyframe.trim();\n                if (isCSSVariableToken(keyframe)) {\n                    const resolved = getVariableValue(keyframe, element.current);\n                    if (resolved !== undefined) {\n                        unresolvedKeyframes[i] = resolved;\n                    }\n                    if (i === unresolvedKeyframes.length - 1) {\n                        this.finalKeyframe = keyframe;\n                    }\n                }\n            }\n        }\n        /**\n         * Resolve \"none\" values. We do this potentially twice - once before and once after measuring keyframes.\n         * This could be seen as inefficient but it's a trade-off to avoid measurements in more situations, which\n         * have a far bigger performance impact.\n         */\n        this.resolveNoneKeyframes();\n        /**\n         * Check to see if unit type has changed. If so schedule jobs that will\n         * temporarily set styles to the destination keyframes.\n         * Skip if we have more than two keyframes or this isn't a positional value.\n         * TODO: We can throw if there are multiple keyframes and the value type changes.\n         */\n        if (!positionalKeys.has(name) || unresolvedKeyframes.length !== 2) {\n            return;\n        }\n        const [origin, target] = unresolvedKeyframes;\n        const originType = findDimensionValueType(origin);\n        const targetType = findDimensionValueType(target);\n        /**\n         * Either we don't recognise these value types or we can animate between them.\n         */\n        if (originType === targetType)\n            return;\n        /**\n         * If both values are numbers or pixels, we can animate between them by\n         * converting them to numbers.\n         */\n        if (isNumOrPxType(originType) && isNumOrPxType(targetType)) {\n            for (let i = 0; i < unresolvedKeyframes.length; i++) {\n                const value = unresolvedKeyframes[i];\n                if (typeof value === \"string\") {\n                    unresolvedKeyframes[i] = parseFloat(value);\n                }\n            }\n        }\n        else if (positionalValues[name]) {\n            /**\n             * Else, the only way to resolve this is by measuring the element.\n             */\n            this.needsMeasurement = true;\n        }\n    }\n    resolveNoneKeyframes() {\n        const { unresolvedKeyframes, name } = this;\n        const noneKeyframeIndexes = [];\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (unresolvedKeyframes[i] === null ||\n                isNone(unresolvedKeyframes[i])) {\n                noneKeyframeIndexes.push(i);\n            }\n        }\n        if (noneKeyframeIndexes.length) {\n            makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name);\n        }\n    }\n    measureInitialState() {\n        const { element, unresolvedKeyframes, name } = this;\n        if (!element || !element.current)\n            return;\n        if (name === \"height\") {\n            this.suspendedScrollY = window.pageYOffset;\n        }\n        this.measuredOrigin = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        unresolvedKeyframes[0] = this.measuredOrigin;\n        // Set final key frame to measure after next render\n        const measureKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n        if (measureKeyframe !== undefined) {\n            element.getValue(name, measureKeyframe).jump(measureKeyframe, false);\n        }\n    }\n    measureEndState() {\n        const { element, name, unresolvedKeyframes } = this;\n        if (!element || !element.current)\n            return;\n        const value = element.getValue(name);\n        value && value.jump(this.measuredOrigin, false);\n        const finalKeyframeIndex = unresolvedKeyframes.length - 1;\n        const finalKeyframe = unresolvedKeyframes[finalKeyframeIndex];\n        unresolvedKeyframes[finalKeyframeIndex] = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        if (finalKeyframe !== null && this.finalKeyframe === undefined) {\n            this.finalKeyframe = finalKeyframe;\n        }\n        // If we removed transform values, reapply them before the next render\n        if (this.removedTransforms?.length) {\n            this.removedTransforms.forEach(([unsetTransformName, unsetTransformValue]) => {\n                element\n                    .getValue(unsetTransformName)\n                    .set(unsetTransformValue);\n            });\n        }\n        this.resolveNoneKeyframes();\n    }\n}\n\nexport { DOMKeyframesResolver };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { MotionGlobalConfig } from 'motion-utils';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { warnOnce, SubscriptionManager, velocityPerSecond } from 'motion-utils';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     */\n    constructor(init, options = {}) {\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = null;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev) {\n                this.events.change?.notify(this.current);\n                if (this.dependents) {\n                    for (const dependent of this.dependents) {\n                        dependent.dirty();\n                    }\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n        if (this.canTrackVelocity === null && current !== undefined) {\n            this.canTrackVelocity = isFloat(this.current);\n        }\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v) {\n        if (!this.passiveEffect) {\n            this.updateAndNotify(v);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v, endAnimation = true) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        endAnimation && this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    dirty() {\n        this.events.change?.notify(this.current);\n    }\n    addDependent(dependent) {\n        if (!this.dependents) {\n            this.dependents = new Set();\n        }\n        this.dependents.add(dependent);\n    }\n    removeDependent(dependent) {\n        if (this.dependents) {\n            this.dependents.delete(dependent);\n        }\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.dependents?.clear();\n        this.events.destroy?.notify();\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","import { color } from '../color/index.mjs';\nimport { complex } from '../complex/index.mjs';\nimport { dimensionValueTypes } from '../dimensions.mjs';\nimport { testValueType } from '../test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: microtask, cancel: cancelMicrotask } = \n/* @__PURE__ */ createRenderBatcher(queueMicrotask, false);\n\nexport { cancelMicrotask, microtask };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","const isBrowser = typeof window !== \"undefined\";\n\nexport { isBrowser };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","function getValueState(visualElement) {\n    const state = [{}, {}];\n    visualElement?.values.forEach((value, key) => {\n        state[0][key] = value.get();\n        state[1][key] = value.getVelocity();\n    });\n    return state;\n}\nfunction resolveVariantFromProps(props, definition, custom, visualElement) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","import { KeyframeResolver, time, frame, isMotionValue, cancelFrame, transformProps, motionValue, findValueType, complex, getAnimatableNone, microtask } from 'motion-dom';\nimport { warnOnce, isNumericalString, isZeroValueString, SubscriptionManager } from 'motion-utils';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\n\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps, _visualElement) {\n        return {};\n    }\n    constructor({ parent, props, presenceContext, reducedMotionConfig, blockInitialAnimation, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        this.KeyframeResolver = KeyframeResolver;\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.renderScheduledAt = 0.0;\n        this.scheduleRender = () => {\n            const now = time.now();\n            if (this.renderScheduledAt < now) {\n                this.renderScheduledAt = now;\n                frame.render(this.render, false, true);\n            }\n        };\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.blockInitialAnimation = Boolean(blockInitialAnimation);\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't necessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {}, this);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key]);\n            }\n        }\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\", \"reduced-motion-disabled\");\n        }\n        this.parent?.addChild(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.valueSubscriptions.clear();\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent?.removeChild(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature) {\n                feature.unmount();\n                feature.isMounted = false;\n            }\n        }\n        this.current = null;\n    }\n    addChild(child) {\n        this.children.add(child);\n        this.enteringChildren ?? (this.enteringChildren = new Set());\n        this.enteringChildren.add(child);\n    }\n    removeChild(child) {\n        this.children.delete(child);\n        this.enteringChildren && this.enteringChildren.delete(child);\n    }\n    bindToMotionValue(key, value) {\n        if (this.valueSubscriptions.has(key)) {\n            this.valueSubscriptions.get(key)();\n        }\n        const valueIsTransform = transformProps.has(key);\n        if (valueIsTransform && this.onBindTransform) {\n            this.onBindTransform();\n        }\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate && frame.preRender(this.notifyUpdate);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n            this.scheduleRender();\n        });\n        let removeSyncCheck;\n        if (window.MotionCheckAppearSync) {\n            removeSyncCheck = window.MotionCheckAppearSync(this, key, value);\n        }\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            if (removeSyncCheck)\n                removeSyncCheck();\n            if (value.owner)\n                value.stop();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    updateFeatures() {\n        let key = \"animation\";\n        for (key in featureDefinitions) {\n            const featureDefinition = featureDefinitions[key];\n            if (!featureDefinition)\n                continue;\n            const { isEnabled, Feature: FeatureConstructor } = featureDefinition;\n            /**\n             * If this feature is enabled but not active, make a new instance.\n             */\n            if (!this.features[key] &&\n                FeatureConstructor &&\n                isEnabled(this.props)) {\n                this.features[key] = new FeatureConstructor(this);\n            }\n            /**\n             * If we have a feature, mount or update it.\n             */\n            if (this.features[key]) {\n                const feature = this.features[key];\n                if (feature.isMounted) {\n                    feature.update();\n                }\n                else {\n                    feature.mount();\n                    feature.isMounted = true;\n                }\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listenerName = (\"on\" + key);\n            const listener = props[listenerName];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps, this), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        const existingValue = this.values.get(key);\n        if (value !== existingValue) {\n            if (existingValue)\n                this.removeValue(key);\n            this.bindToMotionValue(key, value);\n            this.values.set(key, value);\n            this.latestValues[key] = value.get();\n        }\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue === null ? undefined : defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key, target) {\n        let value = this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : this.getBaseTargetFromProps(this.props, key) ??\n                this.readValueFromInstance(this.current, key, this.options);\n        if (value !== undefined && value !== null) {\n            if (typeof value === \"string\" &&\n                (isNumericalString(value) || isZeroValueString(value))) {\n                // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n                value = parseFloat(value);\n            }\n            else if (!findValueType(value) && complex.test(target)) {\n                value = getAnimatableNone(key, target);\n            }\n            this.setBaseTarget(key, isMotionValue(value) ? value.get() : value);\n        }\n        return isMotionValue(value) ? value.get() : value;\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        const { initial } = this.props;\n        let valueFromInitial;\n        if (typeof initial === \"string\" || typeof initial === \"object\") {\n            const variant = resolveVariantFromProps(this.props, initial, this.presenceContext?.custom);\n            if (variant) {\n                valueFromInitial = variant[key];\n            }\n        }\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n    scheduleRenderMicrotask() {\n        microtask.render(this.render);\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addEventListener(\"change\", setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isMotionValue, motionValue } from 'motion-dom';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                if (existingValue.liveStyle === true) {\n                    existingValue.jump(nextValue);\n                }\n                else if (!existingValue.hasAnimated) {\n                    existingValue.set(nextValue);\n                }\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { DOMKeyframesResolver, isMotionValue } from 'motion-dom';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    constructor() {\n        super(...arguments);\n        this.KeyframeResolver = DOMKeyframesResolver;\n    }\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style\n            ? props.style[key]\n            : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current) {\n                    this.current.textContent = `${latest}`;\n                }\n            });\n        }\n    }\n}\n\nexport { DOMVisualElement };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","import { transformPropOrder, getValueAsType, numberValueTypes } from 'motion-dom';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(latestValues, transform, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    let transformIsDefault = true;\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        const value = latestValues[key];\n        if (value === undefined)\n            continue;\n        let valueIsDefault = true;\n        if (typeof value === \"number\") {\n            valueIsDefault = value === (key.startsWith(\"scale\") ? 1 : 0);\n        }\n        else {\n            valueIsDefault = parseFloat(value) === 0;\n        }\n        if (!valueIsDefault || transformTemplate) {\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (!valueIsDefault) {\n                transformIsDefault = false;\n                const transformName = translateAlias[key] || key;\n                transformString += `${transformName}(${valueAsType}) `;\n            }\n            if (transformTemplate) {\n                transform[key] = valueAsType;\n            }\n        }\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","import { transformProps, isCSSVariableName, getValueAsType, numberValueTypes } from 'motion-dom';\nimport { buildTransform } from './build-transform.mjs';\n\nfunction buildHTMLStyles(state, latestValues, transformTemplate) {\n    const { style, vars, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept separately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            continue;\n        }\n        else if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        else {\n            // Convert the value to its default value type, ie 0 -> \"0px\"\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (key.startsWith(\"origin\")) {\n                // If this is a transform origin, flag and enable further transform-origin processing\n                hasTransformOrigin = true;\n                transformOrigin[key] =\n                    valueAsType;\n            }\n            else {\n                style[key] = valueAsType;\n            }\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(latestValues, state.transform, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    const elementStyle = element.style;\n    let key;\n    for (key in style) {\n        // CSSStyleDeclaration has [index: number]: string; in the types, so we use that as key type.\n        elementStyle[key] = style[key];\n    }\n    // Write projection styles directly to element style\n    projection?.applyProjectionStyles(elementStyle, styleProp);\n    for (key in vars) {\n        // Loop over any CSS variables and assign those.\n        // They can only be assigned using `setProperty`.\n        elementStyle.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","import { isCSSVariableName } from 'motion-dom';\n\nconst scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    for (const key in correctors) {\n        scaleCorrectors[key] = correctors[key];\n        if (isCSSVariableName(key)) {\n            scaleCorrectors[key].isCSSVariable = true;\n        }\n    }\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","import { transformProps } from 'motion-dom';\nimport { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","import { isMotionValue } from 'motion-dom';\nimport { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style &&\n                isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props) ||\n            visualElement?.getValue(key)?.liveStyle !== undefined) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { transformProps, defaultTransformValue, readTransformValue, isCSSVariableName } from 'motion-dom';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n        this.renderInstance = renderHTML;\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            return this.projection?.isProjecting\n                ? defaultTransformValue(key)\n                : readTransformValue(instance, key);\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, props) {\n        buildHTMLStyles(renderState, latestValues, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/gu, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","import { px } from 'motion-dom';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attributes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, isSVGTag, transformTemplate, styleProp) {\n    buildHTMLStyles(state, latest, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style } = state;\n    /**\n     * However, we apply transforms as CSS transforms.\n     * So if we detect a transform, transformOrigin we take it from attrs and copy it into style.\n     */\n    if (attrs.transform) {\n        style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    if (style.transform || attrs.transformOrigin) {\n        style.transformOrigin = attrs.transformOrigin ?? \"50% 50%\";\n        delete attrs.transformOrigin;\n    }\n    if (style.transform) {\n        /**\n         * SVG's element transform-origin uses its own median as a reference.\n         * Therefore, transformBox becomes a fill-box\n         */\n        style.transformBox = styleProp?.transformBox ?? \"fill-box\";\n        delete attrs.transformBox;\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { isMotionValue, transformPropOrder } from 'motion-dom';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps, visualElement);\n    for (const key in props) {\n        if (isMotionValue(props[key]) ||\n            isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { transformProps, getDefaultValueType } from 'motion-dom';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n        this.measureInstanceViewportBox = createBox;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    build(renderState, latestValues, props) {\n        buildSVGAttrs(renderState, latestValues, this.isSVGTag, props.transformTemplate, props.style);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","/**\n * We keep these listed separately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/u.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","import { Fragment } from 'react';\nimport { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options)\n        : new HTMLVisualElement(options, {\n            allowProjection: Component !== Fragment,\n        });\n};\n\nexport { createDomVisualElement };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst MotionContext = /* @__PURE__ */ createContext({});\n\nexport { MotionContext };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { isMotionValue } from 'motion-dom';\nimport { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState));\n    return style;\n}\nfunction useHTMLProps(props, visualState) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, isSVGTag(Component), props.transformTemplate, props.style);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (typeof isValidProp !== \"function\")\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] &&\n                key.startsWith(\"onDrag\"))) {\n            filteredProps[key] =\n                props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { isMotionValue } from 'motion-dom';\nimport { Fragment, useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nfunction useRender(Component, props, ref, { latestValues, }, isStatic, forwardMotionProps = false) {\n    const useVisualProps = isSVGComponent(Component)\n        ? useSVGProps\n        : useHTMLProps;\n    const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n    const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n    const elementProps = Component !== Fragment ? { ...filteredProps, ...visualProps, ref } : {};\n    /**\n     * If component has been handed a motion value as its child,\n     * memoise its initial value and render that. Subsequent updates\n     * will be handled by the onChange handler\n     */\n    const { children } = props;\n    const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n    return createElement(Component, {\n        ...elementProps,\n        children: renderedChildren,\n    });\n}\n\nexport { useRender };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = \n/* @__PURE__ */ createContext(null);\n\nexport { PresenceContext };\n","import { isMotionValue } from 'motion-dom';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    return isMotionValue(value) ? value.get() : value;\n}\n\nexport { resolveMotionValue };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    return state;\n}\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        for (let i = 0; i < list.length; i++) {\n            const resolved = resolveVariantFromProps(props, list[i]);\n            if (resolved) {\n                const { transitionEnd, transition, ...target } = resolved;\n                for (const key in target) {\n                    let valueTarget = target[key];\n                    if (Array.isArray(valueTarget)) {\n                        /**\n                         * Take final keyframe if the initial animation is blocked because\n                         * we want to initialise at the end of that blocked animation.\n                         */\n                        const index = isInitialAnimationBlocked\n                            ? valueTarget.length - 1\n                            : 0;\n                        valueTarget = valueTarget[index];\n                    }\n                    if (valueTarget !== null) {\n                        values[key] = valueTarget;\n                    }\n                }\n                for (const key in transitionEnd) {\n                    values[key] = transitionEnd[key];\n                }\n            }\n        }\n    }\n    return values;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\n\nexport { makeUseVisualState };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nconst useHTMLVisualState = /*@__PURE__*/ makeUseVisualState({\n    scrapeMotionValuesFromProps,\n    createRenderState: createHtmlRenderState,\n});\n\nexport { useHTMLVisualState };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nconst useSVGVisualState = /*@__PURE__*/ makeUseVisualState({\n    scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n    createRenderState: createSvgRenderState,\n});\n\nexport { useSVGVisualState };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        if (instance) {\n            visualState.onMount && visualState.onMount(instance);\n        }\n        if (visualElement) {\n            if (instance) {\n                visualElement.mount(instance);\n            }\n            else {\n                visualElement.unmount();\n            }\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../context/SwitchLayoutGroupContext.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement, ProjectionNodeConstructor) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef(null);\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement =\n        createVisualElement ||\n            lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    /**\n     * Load Motion gesture and animation features. These are rendered as renderless\n     * components so each feature can optionally make use of React lifecycle methods.\n     */\n    const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n    if (visualElement &&\n        !visualElement.projection &&\n        ProjectionNodeConstructor &&\n        (visualElement.type === \"html\" || visualElement.type === \"svg\")) {\n        createProjectionNode(visualElementRef.current, props, ProjectionNodeConstructor, initialLayoutGroupConfig);\n    }\n    const isMounted = useRef(false);\n    useInsertionEffect(() => {\n        /**\n         * Check the component has already mounted before calling\n         * `update` unnecessarily. This ensures we skip the initial update.\n         */\n        if (visualElement && isMounted.current) {\n            visualElement.update(props, presenceContext);\n        }\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const optimisedAppearId = props[optimizedAppearDataAttribute];\n    const wantsHandoff = useRef(Boolean(optimisedAppearId) &&\n        !window.MotionHandoffIsComplete?.(optimisedAppearId) &&\n        window.MotionHasOptimisedAnimation?.(optimisedAppearId));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        isMounted.current = true;\n        window.MotionIsMounted = true;\n        visualElement.updateFeatures();\n        visualElement.scheduleRenderMicrotask();\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            // This ensures all future calls to animateChanges() in this component will run in useEffect\n            queueMicrotask(() => {\n                window.MotionHandoffMarkAsComplete?.(optimisedAppearId);\n            });\n            wantsHandoff.current = false;\n        }\n        /**\n         * Now we've finished triggering animations for this element we\n         * can wipe the enteringChildren set for the next render.\n         */\n        visualElement.enteringChildren = undefined;\n    });\n    return visualElement;\n}\nfunction createProjectionNode(visualElement, props, ProjectionNodeConstructor, initialPromotionConfig) {\n    const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, layoutCrossfade, } = props;\n    visualElement.projection = new ProjectionNodeConstructor(visualElement.latestValues, props[\"data-framer-portal-id\"]\n        ? undefined\n        : getClosestProjectingNode(visualElement.parent));\n    visualElement.projection.setOptions({\n        layoutId,\n        layout,\n        alwaysMeasureLayout: Boolean(drag) || (dragConstraints && isRefObject(dragConstraints)),\n        visualElement,\n        /**\n         * TODO: Update options in an effect. This could be tricky as it'll be too late\n         * to update by the time layout animations run.\n         * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n         * ensuring it gets called if there's no potential layout animations.\n         *\n         */\n        animationType: typeof layout === \"string\" ? layout : \"both\",\n        initialPromotionConfig,\n        crossfade: layoutCrossfade,\n        layoutScroll,\n        layoutRoot,\n    });\n}\nfunction getClosestProjectingNode(visualElement) {\n    if (!visualElement)\n        return undefined;\n    return visualElement.options.allowProjection !== false\n        ? visualElement.projection\n        : getClosestProjectingNode(visualElement.parent);\n}\n\nexport { useVisualElement };\n","\"use client\";\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport { warning, invariant } from 'motion-utils';\nimport { forwardRef, useContext } from 'react';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { useRender } from '../render/dom/use-render.mjs';\nimport { isSVGComponent } from '../render/dom/utils/is-svg-component.mjs';\nimport { useHTMLVisualState } from '../render/html/use-html-visual-state.mjs';\nimport { useSVGVisualState } from '../render/svg/use-svg-visual-state.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { featureDefinitions } from './features/definitions.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent(Component, { forwardMotionProps = false } = {}, preloadedFeatures, createVisualElement) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    const useVisualState = isSVGComponent(Component)\n        ? useSVGVisualState\n        : useHTMLVisualState;\n    function MotionDOMComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            useStrictMode(configAndProps, preloadedFeatures);\n            const layoutProjection = getProjectionFunctionality(configAndProps);\n            MeasureLayout = layoutProjection.MeasureLayout;\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement, layoutProjection.ProjectionNode);\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (jsxs(MotionContext.Provider, { value: context, children: [MeasureLayout && context.visualElement ? (jsx(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null, useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, forwardMotionProps)] }));\n    }\n    MotionDOMComponent.displayName = `motion.${typeof Component === \"string\"\n        ? Component\n        : `create(${Component.displayName ?? Component.name ?? \"\"})`}`;\n    const ForwardRefMotionComponent = forwardRef(MotionDOMComponent);\n    ForwardRefMotionComponent[motionComponentSymbol] = Component;\n    return ForwardRefMotionComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\nfunction useStrictMode(configAndProps, preloadedFeatures) {\n    const isStrict = useContext(LazyContext).strict;\n    /**\n     * If we're in development mode, check to make sure we're not rendering a motion component\n     * as a child of LazyMotion, as this will break the file-size benefits of using it.\n     */\n    if (process.env.NODE_ENV !== \"production\" &&\n        preloadedFeatures &&\n        isStrict) {\n        const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n        configAndProps.ignoreStrict\n            ? warning(false, strictMessage, \"lazy-strict-mode\")\n            : invariant(false, strictMessage, \"lazy-strict-mode\");\n    }\n}\nfunction getProjectionFunctionality(props) {\n    const { drag, layout } = featureDefinitions;\n    if (!drag && !layout)\n        return {};\n    const combined = { ...drag, ...layout };\n    return {\n        MeasureLayout: drag?.isEnabled(props) || layout?.isEnabled(props)\n            ? combined.MeasureLayout\n            : undefined,\n        ProjectionNode: combined.ProjectionNode,\n    };\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { warnOnce } from 'motion-utils';\nimport { createMotionComponent } from '../../motion/index.mjs';\n\nfunction createMotionProxy(preloadedFeatures, createVisualElement) {\n    if (typeof Proxy === \"undefined\") {\n        return createMotionComponent;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    const factory = (Component, options) => {\n        return createMotionComponent(Component, options, preloadedFeatures, createVisualElement);\n    };\n    /**\n     * Support for deprecated`motion(Component)` pattern\n     */\n    const deprecatedFactoryFunction = (Component, options) => {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, \"motion() is deprecated. Use motion.create() instead.\");\n        }\n        return factory(Component, options);\n    };\n    return new Proxy(deprecatedFactoryFunction, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            if (key === \"create\")\n                return factory;\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, createMotionComponent(key, undefined, preloadedFeatures, createVisualElement));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, visualElement);\n}\n\nexport { resolveVariant };\n","function getValueTransition(transition, key) {\n    return (transition?.[key] ??\n        transition?.[\"default\"] ??\n        transition);\n}\n\nexport { getValueTransition };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { motionValue } from 'motion-dom';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction resolveFinalValueInKeyframes(v) {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved || {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\n\nexport { setTarget };\n","import { MotionGlobalConfig } from 'motion-utils';\nimport { isWillChangeMotionValue } from './is.mjs';\n\nfunction addValueToWillChange(visualElement, key) {\n    const willChange = visualElement.getValue(\"willChange\");\n    /**\n     * It could be that a user has set willChange to a regular MotionValue,\n     * in which case we can't add the value to it.\n     */\n    if (isWillChangeMotionValue(willChange)) {\n        return willChange.add(key);\n    }\n    else if (!willChange && MotionGlobalConfig.WillChange) {\n        const newWillChange = new MotionGlobalConfig.WillChange(\"auto\");\n        visualElement.addValue(\"willChange\", newWillChange);\n        newWillChange.add(key);\n    }\n}\n\nexport { addValueToWillChange };\n","import { isMotionValue } from 'motion-dom';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","import { optimizedAppearDataAttribute } from './data-id.mjs';\n\nfunction getOptimisedAppearId(visualElement) {\n    return visualElement.props[optimizedAppearDataAttribute];\n}\n\nexport { getOptimisedAppearId };\n","function makeAnimationInstant(options) {\n    options.duration = 0;\n    options.type === \"keyframes\";\n}\n\nexport { makeAnimationInstant };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\n/*#__NO_SIDE_EFFECTS__*/\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\n/*#__NO_SIDE_EFFECTS__*/\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","const activeAnimations = {\n    layout: 0,\n    mainThread: 0,\n    waapi: 0,\n};\n\nexport { activeAnimations };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","function mixImmediate(a, b) {\n    return (p) => (p > 0 ? b : a);\n}\n\nexport { mixImmediate };\n","import { warning } from 'motion-utils';\nimport { hex } from '../../value/types/color/hex.mjs';\nimport { hsla } from '../../value/types/color/hsla.mjs';\nimport { hslaToRgba } from '../../value/types/color/hsla-to-rgba.mjs';\nimport { rgba } from '../../value/types/color/rgba.mjs';\nimport { mixImmediate } from './immediate.mjs';\nimport { mixNumber } from './number.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    const expo = v * (to * to - fromExpo) + fromExpo;\n    return expo < 0 ? 0 : Math.sqrt(expo);\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    warning(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`, \"color-not-animatable\");\n    if (!Boolean(type))\n        return false;\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    if (!fromRGBA || !toRGBA) {\n        return mixImmediate(from, to);\n    }\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mixNumber(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","const invisibleValues = new Set([\"none\", \"hidden\"]);\n/**\n * Returns a function that, when provided a progress value between 0 and 1,\n * will return the \"none\" or \"hidden\" string only when the progress is that of\n * the origin or target.\n */\nfunction mixVisibility(origin, target) {\n    if (invisibleValues.has(origin)) {\n        return (p) => (p <= 0 ? origin : target);\n    }\n    else {\n        return (p) => (p >= 1 ? target : origin);\n    }\n}\n\nexport { invisibleValues, mixVisibility };\n","import { pipe, warning } from 'motion-utils';\nimport { isCSSVariableToken } from '../../animation/utils/is-css-variable.mjs';\nimport { color } from '../../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../../value/types/complex/index.mjs';\nimport { mixColor } from './color.mjs';\nimport { mixImmediate } from './immediate.mjs';\nimport { mixNumber as mixNumber$1 } from './number.mjs';\nimport { invisibleValues, mixVisibility } from './visibility.mjs';\n\nfunction mixNumber(a, b) {\n    return (p) => mixNumber$1(a, b, p);\n}\nfunction getMixer(a) {\n    if (typeof a === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof a === \"string\") {\n        return isCSSVariableToken(a)\n            ? mixImmediate\n            : color.test(a)\n                ? mixColor\n                : mixComplex;\n    }\n    else if (Array.isArray(a)) {\n        return mixArray;\n    }\n    else if (typeof a === \"object\") {\n        return color.test(a) ? mixColor : mixObject;\n    }\n    return mixImmediate;\n}\nfunction mixArray(a, b) {\n    const output = [...a];\n    const numValues = output.length;\n    const blendValue = a.map((v, i) => getMixer(v)(v, b[i]));\n    return (p) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](p);\n        }\n        return output;\n    };\n}\nfunction mixObject(a, b) {\n    const output = { ...a, ...b };\n    const blendValue = {};\n    for (const key in output) {\n        if (a[key] !== undefined && b[key] !== undefined) {\n            blendValue[key] = getMixer(a[key])(a[key], b[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n}\nfunction matchOrder(origin, target) {\n    const orderedOrigin = [];\n    const pointers = { color: 0, var: 0, number: 0 };\n    for (let i = 0; i < target.values.length; i++) {\n        const type = target.types[i];\n        const originIndex = origin.indexes[type][pointers[type]];\n        const originValue = origin.values[originIndex] ?? 0;\n        orderedOrigin[i] = originValue;\n        pointers[type]++;\n    }\n    return orderedOrigin;\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length &&\n        originStats.indexes.color.length === targetStats.indexes.color.length &&\n        originStats.indexes.number.length >= targetStats.indexes.number.length;\n    if (canInterpolate) {\n        if ((invisibleValues.has(origin) &&\n            !targetStats.values.length) ||\n            (invisibleValues.has(target) &&\n                !originStats.values.length)) {\n            return mixVisibility(origin, target);\n        }\n        return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`, \"complex-values-different\");\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { getMixer, mixArray, mixComplex, mixObject };\n","import { getMixer } from './complex.mjs';\nimport { mixNumber } from './number.mjs';\n\nfunction mix(from, to, p) {\n    if (typeof from === \"number\" &&\n        typeof to === \"number\" &&\n        typeof p === \"number\") {\n        return mixNumber(from, to, p);\n    }\n    const mixer = getMixer(from);\n    return mixer(from, to);\n}\n\nexport { mix };\n","import { time } from '../../frameloop/sync-time.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: (keepAlive = true) => frame.update(passTimestamp, keepAlive),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\n    };\n};\n\nexport { frameloopDriver };\n","const generateLinearEasing = (easing, duration, // as milliseconds\nresolution = 10 // as milliseconds\n) => {\n    let points = \"\";\n    const numPoints = Math.max(Math.round(duration / resolution), 2);\n    for (let i = 0; i < numPoints; i++) {\n        points += Math.round(easing(i / (numPoints - 1)) * 10000) / 10000 + \", \";\n    }\n    return `linear(${points.substring(0, points.length - 2)})`;\n};\n\nexport { generateLinearEasing };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","import { velocityPerSecond } from 'motion-utils';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","const springDefaults = {\n    // Default spring physics\n    stiffness: 100,\n    damping: 10,\n    mass: 1.0,\n    velocity: 0.0,\n    // Default duration/bounce-based options\n    duration: 800, // in ms\n    bounce: 0.3,\n    visualDuration: 0.3, // in seconds\n    // Rest thresholds\n    restSpeed: {\n        granular: 0.01,\n        default: 2,\n    },\n    restDelta: {\n        granular: 0.005,\n        default: 0.5,\n    },\n    // Limits\n    minDuration: 0.01, // in seconds\n    maxDuration: 10.0, // in seconds\n    minDamping: 0.05,\n    maxDamping: 1,\n};\n\nexport { springDefaults };\n","import { warning, secondsToMilliseconds, clamp, millisecondsToSeconds } from 'motion-utils';\nimport { springDefaults } from './defaults.mjs';\n\nconst safeMin = 0.001;\nfunction findSpring({ duration = springDefaults.duration, bounce = springDefaults.bounce, velocity = springDefaults.velocity, mass = springDefaults.mass, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(springDefaults.maxDuration), \"Spring duration must be 10 seconds or less\", \"spring-duration-limit\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(springDefaults.minDamping, springDefaults.maxDamping, dampingRatio);\n    duration = clamp(springDefaults.minDuration, springDefaults.maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: springDefaults.stiffness,\n            damping: springDefaults.damping,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring };\n","import { millisecondsToSeconds, secondsToMilliseconds, clamp } from 'motion-utils';\nimport { generateLinearEasing } from '../../waapi/utils/linear.mjs';\nimport { calcGeneratorDuration, maxGeneratorDuration } from '../utils/calc-duration.mjs';\nimport { createGeneratorEasing } from '../utils/create-generator-easing.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { springDefaults } from './defaults.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: springDefaults.velocity,\n        stiffness: springDefaults.stiffness,\n        damping: springDefaults.damping,\n        mass: springDefaults.mass,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        if (options.visualDuration) {\n            const visualDuration = options.visualDuration;\n            const root = (2 * Math.PI) / (visualDuration * 1.2);\n            const stiffness = root * root;\n            const damping = 2 *\n                clamp(0.05, 1, 1 - (options.bounce || 0)) *\n                Math.sqrt(stiffness);\n            springOptions = {\n                ...springOptions,\n                mass: springDefaults.mass,\n                stiffness,\n                damping,\n            };\n        }\n        else {\n            const derived = findSpring(options);\n            springOptions = {\n                ...springOptions,\n                ...derived,\n                mass: springDefaults.mass,\n            };\n            springOptions.isResolvedFromDuration = true;\n        }\n    }\n    return springOptions;\n}\nfunction spring(optionsOrVisualDuration = springDefaults.visualDuration, bounce = springDefaults.bounce) {\n    const options = typeof optionsOrVisualDuration !== \"object\"\n        ? {\n            visualDuration: optionsOrVisualDuration,\n            keyframes: [0, 1],\n            bounce,\n        }\n        : optionsOrVisualDuration;\n    let { restSpeed, restDelta } = options;\n    const origin = options.keyframes[0];\n    const target = options.keyframes[options.keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale\n        ? springDefaults.restSpeed.granular\n        : springDefaults.restSpeed.default);\n    restDelta || (restDelta = isGranularScale\n        ? springDefaults.restDelta.granular\n        : springDefaults.restDelta.default);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    const generator = {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = t === 0 ? initialVelocity : 0.0;\n                /**\n                 * We only need to calculate velocity for under-damped springs\n                 * as over- and critically-damped springs can't overshoot, so\n                 * checking only for displacement is enough.\n                 */\n                if (dampingRatio < 1) {\n                    currentVelocity =\n                        t === 0\n                            ? secondsToMilliseconds(initialVelocity)\n                            : calcGeneratorVelocity(resolveSpring, t, current);\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n        toString: () => {\n            const calculatedDuration = Math.min(calcGeneratorDuration(generator), maxGeneratorDuration);\n            const easing = generateLinearEasing((progress) => generator.next(calculatedDuration * progress).value, calculatedDuration, 30);\n            return calculatedDuration + \"ms \" + easing;\n        },\n        toTransition: () => { },\n    };\n    return generator;\n}\nspring.applyToOptions = (options) => {\n    const generatorOptions = createGeneratorEasing(options, 100, spring);\n    options.ease = generatorOptions.ease;\n    options.duration = secondsToMilliseconds(generatorOptions.duration);\n    options.type = \"keyframes\";\n    return options;\n};\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value), // TODO: This should be passing * 1000\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t >= timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { millisecondsToSeconds } from 'motion-utils';\nimport { calcGeneratorDuration, maxGeneratorDuration } from './calc-duration.mjs';\n\n/**\n * Create a progress => progress easing function from a generator.\n */\nfunction createGeneratorEasing(options, scale = 100, createGenerator) {\n    const generator = createGenerator({ ...options, keyframes: [0, scale] });\n    const duration = Math.min(calcGeneratorDuration(generator), maxGeneratorDuration);\n    return {\n        type: \"keyframes\",\n        ease: (progress) => {\n            return generator.next(duration * progress).value / scale;\n        },\n        duration: millisecondsToSeconds(duration),\n    };\n}\n\nexport { createGeneratorEasing };\n","import { noop } from '../noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticeably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = /*@__PURE__*/ cubicBezier(0.42, 0, 1, 1);\nconst easeOut = /*@__PURE__*/ cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = /*@__PURE__*/ cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = /*@__PURE__*/ cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = /*@__PURE__*/ reverseEasing(backOut);\nconst backInOut = /*@__PURE__*/ mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { invariant } from '../../errors.mjs';\nimport { noop } from '../../noop.mjs';\nimport { anticipate } from '../anticipate.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { isBezierDefinition } from './is-bezier-definition.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst isValidEasing = (easing) => {\n    return typeof easing === \"string\";\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (isBezierDefinition(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`, \"cubic-bezier-length\");\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (isValidEasing(definition)) {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`, \"invalid-easing-type\");\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\n/*#__NO_SIDE_EFFECTS__*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { invariant, clamp, MotionGlobalConfig, noop, pipe, progress } from 'motion-utils';\nimport { mix } from './mix/index.mjs';\n\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || MotionGlobalConfig.mix || mix;\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revisit this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\", \"range-length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    if (inputLength === 2 && output[0] === output[1])\n        return () => output[1];\n    const isZeroDeltaRange = input[0] === input[1];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        if (isZeroDeltaRange && v < input[0])\n            return output[0];\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { progress } from 'motion-utils';\nimport { mixNumber } from '../../../utils/mix/number.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mixNumber(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut, isEasingArray, easingDefinitionToFunction } from 'motion-utils';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../keyframes/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../keyframes/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe, speed = 1) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const useFirstKeyframe = speed < 0 || (repeat && repeatType !== \"loop\" && repeat % 2 === 1);\n    const index = useFirstKeyframe ? 0 : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","import { inertia } from '../generators/inertia.mjs';\nimport { keyframes } from '../generators/keyframes.mjs';\nimport { spring } from '../generators/spring/index.mjs';\n\nconst transitionTypeMap = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\nfunction replaceTransitionType(transition) {\n    if (typeof transition.type === \"string\") {\n        transition.type = transitionTypeMap[transition.type];\n    }\n}\n\nexport { replaceTransitionType };\n","class WithPromise {\n    constructor() {\n        this.updateFinished();\n    }\n    get finished() {\n        return this._finished;\n    }\n    updateFinished() {\n        this._finished = new Promise((resolve) => {\n            this.resolve = resolve;\n        });\n    }\n    notifyFinished() {\n        this.resolve();\n    }\n    /**\n     * Allows the animation to be awaited.\n     *\n     * @deprecated Use `finished` instead.\n     */\n    then(onResolve, onReject) {\n        return this.finished.then(onResolve, onReject);\n    }\n}\n\nexport { WithPromise };\n","import { invariant, pipe, clamp, millisecondsToSeconds, secondsToMilliseconds } from 'motion-utils';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { activeAnimations } from '../stats/animation-count.mjs';\nimport { mix } from '../utils/mix/index.mjs';\nimport { frameloopDriver } from './drivers/frame.mjs';\nimport { inertia } from './generators/inertia.mjs';\nimport { keyframes } from './generators/keyframes.mjs';\nimport { calcGeneratorDuration } from './generators/utils/calc-duration.mjs';\nimport { getFinalKeyframe } from './keyframes/get-final.mjs';\nimport { replaceTransitionType } from './utils/replace-transition-type.mjs';\nimport { WithPromise } from './utils/WithPromise.mjs';\n\nconst percentToProgress = (percent) => percent / 100;\nclass JSAnimation extends WithPromise {\n    constructor(options) {\n        super();\n        this.state = \"idle\";\n        this.startTime = null;\n        this.isStopped = false;\n        /**\n         * The current time of the animation.\n         */\n        this.currentTime = 0;\n        /**\n         * The time at which the animation was paused.\n         */\n        this.holdTime = null;\n        /**\n         * Playback speed as a factor. 0 would be stopped, -1 reverse and 2 double speed.\n         */\n        this.playbackSpeed = 1;\n        /**\n         * This method is bound to the instance to fix a pattern where\n         * animation.stop is returned as a reference from a useEffect.\n         */\n        this.stop = () => {\n            const { motionValue } = this.options;\n            if (motionValue && motionValue.updatedAt !== time.now()) {\n                this.tick(time.now());\n            }\n            this.isStopped = true;\n            if (this.state === \"idle\")\n                return;\n            this.teardown();\n            this.options.onStop?.();\n        };\n        activeAnimations.mainThread++;\n        this.options = options;\n        this.initAnimation();\n        this.play();\n        if (options.autoplay === false)\n            this.pause();\n    }\n    initAnimation() {\n        const { options } = this;\n        replaceTransitionType(options);\n        const { type = keyframes, repeat = 0, repeatDelay = 0, repeatType, velocity = 0, } = options;\n        let { keyframes: keyframes$1 } = options;\n        const generatorFactory = type || keyframes;\n        if (process.env.NODE_ENV !== \"production\" &&\n            generatorFactory !== keyframes) {\n            invariant(keyframes$1.length <= 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`, \"spring-two-frames\");\n        }\n        if (generatorFactory !== keyframes &&\n            typeof keyframes$1[0] !== \"number\") {\n            this.mixKeyframes = pipe(percentToProgress, mix(keyframes$1[0], keyframes$1[1]));\n            keyframes$1 = [0, 100];\n        }\n        const generator = generatorFactory({ ...options, keyframes: keyframes$1 });\n        /**\n         * If we have a mirror repeat type we need to create a second generator that outputs the\n         * mirrored (not reversed) animation and later ping pong between the two generators.\n         */\n        if (repeatType === \"mirror\") {\n            this.mirroredGenerator = generatorFactory({\n                ...options,\n                keyframes: [...keyframes$1].reverse(),\n                velocity: -velocity,\n            });\n        }\n        /**\n         * If duration is undefined and we have repeat options,\n         * we need to calculate a duration from the generator.\n         *\n         * We set it to the generator itself to cache the duration.\n         * Any timeline resolver will need to have already precalculated\n         * the duration by this step.\n         */\n        if (generator.calculatedDuration === null) {\n            generator.calculatedDuration = calcGeneratorDuration(generator);\n        }\n        const { calculatedDuration } = generator;\n        this.calculatedDuration = calculatedDuration;\n        this.resolvedDuration = calculatedDuration + repeatDelay;\n        this.totalDuration = this.resolvedDuration * (repeat + 1) - repeatDelay;\n        this.generator = generator;\n    }\n    updateTime(timestamp) {\n        const animationTime = Math.round(timestamp - this.startTime) * this.playbackSpeed;\n        // Update currentTime\n        if (this.holdTime !== null) {\n            this.currentTime = this.holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            this.currentTime = animationTime;\n        }\n    }\n    tick(timestamp, sample = false) {\n        const { generator, totalDuration, mixKeyframes, mirroredGenerator, resolvedDuration, calculatedDuration, } = this;\n        if (this.startTime === null)\n            return generator.next(0);\n        const { delay = 0, keyframes, repeat, repeatType, repeatDelay, type, onUpdate, finalKeyframe, } = this.options;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (this.speed > 0) {\n            this.startTime = Math.min(this.startTime, timestamp);\n        }\n        else if (this.speed < 0) {\n            this.startTime = Math.min(timestamp - totalDuration / this.speed, this.startTime);\n        }\n        if (sample) {\n            this.currentTime = timestamp;\n        }\n        else {\n            this.updateTime(timestamp);\n        }\n        // Rebase on delay\n        const timeWithoutDelay = this.currentTime - delay * (this.playbackSpeed >= 0 ? 1 : -1);\n        const isInDelayPhase = this.playbackSpeed >= 0\n            ? timeWithoutDelay < 0\n            : timeWithoutDelay > totalDuration;\n        this.currentTime = Math.max(timeWithoutDelay, 0);\n        // If this animation has finished, set the current time  to the total duration.\n        if (this.state === \"finished\" && this.holdTime === null) {\n            this.currentTime = totalDuration;\n        }\n        let elapsed = this.currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(this.currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes[0] }\n            : frameGenerator.next(elapsed);\n        if (mixKeyframes) {\n            state.value = mixKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done =\n                this.playbackSpeed >= 0\n                    ? this.currentTime >= totalDuration\n                    : this.currentTime <= 0;\n        }\n        const isAnimationFinished = this.holdTime === null &&\n            (this.state === \"finished\" || (this.state === \"running\" && done));\n        // TODO: The exception for inertia could be cleaner here\n        if (isAnimationFinished && type !== inertia) {\n            state.value = getFinalKeyframe(keyframes, this.options, finalKeyframe, this.speed);\n        }\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            this.finish();\n        }\n        return state;\n    }\n    /**\n     * Allows the returned animation to be awaited or promise-chained. Currently\n     * resolves when the animation finishes at all but in a future update could/should\n     * reject if its cancels.\n     */\n    then(resolve, reject) {\n        return this.finished.then(resolve, reject);\n    }\n    get duration() {\n        return millisecondsToSeconds(this.calculatedDuration);\n    }\n    get time() {\n        return millisecondsToSeconds(this.currentTime);\n    }\n    set time(newTime) {\n        newTime = secondsToMilliseconds(newTime);\n        this.currentTime = newTime;\n        if (this.startTime === null ||\n            this.holdTime !== null ||\n            this.playbackSpeed === 0) {\n            this.holdTime = newTime;\n        }\n        else if (this.driver) {\n            this.startTime = this.driver.now() - newTime / this.playbackSpeed;\n        }\n        this.driver?.start(false);\n    }\n    get speed() {\n        return this.playbackSpeed;\n    }\n    set speed(newSpeed) {\n        this.updateTime(time.now());\n        const hasChanged = this.playbackSpeed !== newSpeed;\n        this.playbackSpeed = newSpeed;\n        if (hasChanged) {\n            this.time = millisecondsToSeconds(this.currentTime);\n        }\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        const { driver = frameloopDriver, startTime } = this.options;\n        if (!this.driver) {\n            this.driver = driver((timestamp) => this.tick(timestamp));\n        }\n        this.options.onPlay?.();\n        const now = this.driver.now();\n        if (this.state === \"finished\") {\n            this.updateFinished();\n            this.startTime = now;\n        }\n        else if (this.holdTime !== null) {\n            this.startTime = now - this.holdTime;\n        }\n        else if (!this.startTime) {\n            this.startTime = startTime ?? now;\n        }\n        if (this.state === \"finished\" && this.speed < 0) {\n            this.startTime += this.calculatedDuration;\n        }\n        this.holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        this.state = \"running\";\n        this.driver.start();\n    }\n    pause() {\n        this.state = \"paused\";\n        this.updateTime(time.now());\n        this.holdTime = this.currentTime;\n    }\n    complete() {\n        if (this.state !== \"running\") {\n            this.play();\n        }\n        this.state = \"finished\";\n        this.holdTime = null;\n    }\n    finish() {\n        this.notifyFinished();\n        this.teardown();\n        this.state = \"finished\";\n        this.options.onComplete?.();\n    }\n    cancel() {\n        this.holdTime = null;\n        this.startTime = 0;\n        this.tick(0);\n        this.teardown();\n        this.options.onCancel?.();\n    }\n    teardown() {\n        this.state = \"idle\";\n        this.stopDriver();\n        this.startTime = this.holdTime = null;\n        activeAnimations.mainThread--;\n    }\n    stopDriver() {\n        if (!this.driver)\n            return;\n        this.driver.stop();\n        this.driver = undefined;\n    }\n    sample(sampleTime) {\n        this.startTime = 0;\n        return this.tick(sampleTime, true);\n    }\n    attachTimeline(timeline) {\n        if (this.options.allowFlatten) {\n            this.options.type = \"keyframes\";\n            this.options.ease = \"linear\";\n            this.initAnimation();\n        }\n        this.driver?.stop();\n        return timeline.observe(this);\n    }\n}\n// Legacy function support\nfunction animateValue(options) {\n    return new JSAnimation(options);\n}\n\nexport { JSAnimation, animateValue };\n","/*#__NO_SIDE_EFFECTS__*/\nfunction memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","import { memo } from 'motion-utils';\n\nconst supportsScrollTimeline = /* @__PURE__ */ memo(() => window.ScrollTimeline !== undefined);\n\nexport { supportsScrollTimeline };\n","/**\n * Add the ability for test suites to manually set support flags\n * to better test more environments.\n */\nconst supportsFlags = {};\n\nexport { supportsFlags };\n","import { memo } from 'motion-utils';\nimport { supportsFlags } from './flags.mjs';\n\nfunction memoSupports(callback, supportsFlag) {\n    const memoized = memo(callback);\n    return () => supportsFlags[supportsFlag] ?? memoized();\n}\n\nexport { memoSupports };\n","import { memoSupports } from './memo.mjs';\n\nconst supportsLinearEasing = /*@__PURE__*/ memoSupports(() => {\n    try {\n        document\n            .createElement(\"div\")\n            .animate({ opacity: 0 }, { easing: \"linear(0, 1)\" });\n    }\n    catch (e) {\n        return false;\n    }\n    return true;\n}, \"linearEasing\");\n\nexport { supportsLinearEasing };\n","const cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\n\nexport { cubicBezierAsString };\n","import { cubicBezierAsString } from './cubic-bezier.mjs';\n\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: /*@__PURE__*/ cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: /*@__PURE__*/ cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: /*@__PURE__*/ cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: /*@__PURE__*/ cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\n\nexport { supportedWaapiEasing };\n","import { isBezierDefinition } from 'motion-utils';\nimport { supportsLinearEasing } from '../../../utils/supports/linear-easing.mjs';\nimport { generateLinearEasing } from '../utils/linear.mjs';\nimport { cubicBezierAsString } from './cubic-bezier.mjs';\nimport { supportedWaapiEasing } from './supported.mjs';\n\nfunction mapEasingToNativeEasing(easing, duration) {\n    if (!easing) {\n        return undefined;\n    }\n    else if (typeof easing === \"function\") {\n        return supportsLinearEasing()\n            ? generateLinearEasing(easing, duration)\n            : \"ease-out\";\n    }\n    else if (isBezierDefinition(easing)) {\n        return cubicBezierAsString(easing);\n    }\n    else if (Array.isArray(easing)) {\n        return easing.map((segmentEasing) => mapEasingToNativeEasing(segmentEasing, duration) ||\n            supportedWaapiEasing.easeOut);\n    }\n    else {\n        return supportedWaapiEasing[easing];\n    }\n}\n\nexport { mapEasingToNativeEasing };\n","import { activeAnimations } from '../../stats/animation-count.mjs';\nimport { statsBuffer } from '../../stats/buffer.mjs';\nimport { mapEasingToNativeEasing } from './easing/map-easing.mjs';\n\nfunction startWaapiAnimation(element, valueName, keyframes, { delay = 0, duration = 300, repeat = 0, repeatType = \"loop\", ease = \"easeOut\", times, } = {}, pseudoElement = undefined) {\n    const keyframeOptions = {\n        [valueName]: keyframes,\n    };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease, duration);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    if (statsBuffer.value) {\n        activeAnimations.waapi++;\n    }\n    const options = {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    };\n    if (pseudoElement)\n        options.pseudoElement = pseudoElement;\n    const animation = element.animate(keyframeOptions, options);\n    if (statsBuffer.value) {\n        animation.finished.finally(() => {\n            activeAnimations.waapi--;\n        });\n    }\n    return animation;\n}\n\nexport { startWaapiAnimation };\n","function isGenerator(type) {\n    return typeof type === \"function\" && \"applyToOptions\" in type;\n}\n\nexport { isGenerator };\n","import { invariant, millisecondsToSeconds, secondsToMilliseconds, noop } from 'motion-utils';\nimport { setStyle } from '../render/dom/style-set.mjs';\nimport { supportsScrollTimeline } from '../utils/supports/scroll-timeline.mjs';\nimport { getFinalKeyframe } from './keyframes/get-final.mjs';\nimport { WithPromise } from './utils/WithPromise.mjs';\nimport { startWaapiAnimation } from './waapi/start-waapi-animation.mjs';\nimport { applyGeneratorOptions } from './waapi/utils/apply-generator.mjs';\n\n/**\n * NativeAnimation implements AnimationPlaybackControls for the browser's Web Animations API.\n */\nclass NativeAnimation extends WithPromise {\n    constructor(options) {\n        super();\n        this.finishedTime = null;\n        this.isStopped = false;\n        if (!options)\n            return;\n        const { element, name, keyframes, pseudoElement, allowFlatten = false, finalKeyframe, onComplete, } = options;\n        this.isPseudoElement = Boolean(pseudoElement);\n        this.allowFlatten = allowFlatten;\n        this.options = options;\n        invariant(typeof options.type !== \"string\", `Mini animate() doesn't support \"type\" as a string.`, \"mini-spring\");\n        const transition = applyGeneratorOptions(options);\n        this.animation = startWaapiAnimation(element, name, keyframes, transition, pseudoElement);\n        if (transition.autoplay === false) {\n            this.animation.pause();\n        }\n        this.animation.onfinish = () => {\n            this.finishedTime = this.time;\n            if (!pseudoElement) {\n                const keyframe = getFinalKeyframe(keyframes, this.options, finalKeyframe, this.speed);\n                if (this.updateMotionValue) {\n                    this.updateMotionValue(keyframe);\n                }\n                else {\n                    /**\n                     * If we can, we want to commit the final style as set by the user,\n                     * rather than the computed keyframe value supplied by the animation.\n                     */\n                    setStyle(element, name, keyframe);\n                }\n                this.animation.cancel();\n            }\n            onComplete?.();\n            this.notifyFinished();\n        };\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        this.animation.play();\n        if (this.state === \"finished\") {\n            this.updateFinished();\n        }\n    }\n    pause() {\n        this.animation.pause();\n    }\n    complete() {\n        this.animation.finish?.();\n    }\n    cancel() {\n        try {\n            this.animation.cancel();\n        }\n        catch (e) { }\n    }\n    stop() {\n        if (this.isStopped)\n            return;\n        this.isStopped = true;\n        const { state } = this;\n        if (state === \"idle\" || state === \"finished\") {\n            return;\n        }\n        if (this.updateMotionValue) {\n            this.updateMotionValue();\n        }\n        else {\n            this.commitStyles();\n        }\n        if (!this.isPseudoElement)\n            this.cancel();\n    }\n    /**\n     * WAAPI doesn't natively have any interruption capabilities.\n     *\n     * In this method, we commit styles back to the DOM before cancelling\n     * the animation.\n     *\n     * This is designed to be overridden by NativeAnimationExtended, which\n     * will create a renderless JS animation and sample it twice to calculate\n     * its current value, \"previous\" value, and therefore allow\n     * Motion to also correctly calculate velocity for any subsequent animation\n     * while deferring the commit until the next animation frame.\n     */\n    commitStyles() {\n        if (!this.isPseudoElement) {\n            this.animation.commitStyles?.();\n        }\n    }\n    get duration() {\n        const duration = this.animation.effect?.getComputedTiming?.().duration || 0;\n        return millisecondsToSeconds(Number(duration));\n    }\n    get time() {\n        return millisecondsToSeconds(Number(this.animation.currentTime) || 0);\n    }\n    set time(newTime) {\n        this.finishedTime = null;\n        this.animation.currentTime = secondsToMilliseconds(newTime);\n    }\n    /**\n     * The playback speed of the animation.\n     * 1 = normal speed, 2 = double speed, 0.5 = half speed.\n     */\n    get speed() {\n        return this.animation.playbackRate;\n    }\n    set speed(newSpeed) {\n        // Allow backwards playback after finishing\n        if (newSpeed < 0)\n            this.finishedTime = null;\n        this.animation.playbackRate = newSpeed;\n    }\n    get state() {\n        return this.finishedTime !== null\n            ? \"finished\"\n            : this.animation.playState;\n    }\n    get startTime() {\n        return Number(this.animation.startTime);\n    }\n    set startTime(newStartTime) {\n        this.animation.startTime = newStartTime;\n    }\n    /**\n     * Attaches a timeline to the animation, for instance the `ScrollTimeline`.\n     */\n    attachTimeline({ timeline, observe }) {\n        if (this.allowFlatten) {\n            this.animation.effect?.updateTiming({ easing: \"linear\" });\n        }\n        this.animation.onfinish = null;\n        if (timeline && supportsScrollTimeline()) {\n            this.animation.timeline = timeline;\n            return noop;\n        }\n        else {\n            return observe(this);\n        }\n    }\n}\n\nexport { NativeAnimation };\n","import { supportsLinearEasing } from '../../../utils/supports/linear-easing.mjs';\nimport { isGenerator } from '../../generators/utils/is-generator.mjs';\n\nfunction applyGeneratorOptions({ type, ...options }) {\n    if (isGenerator(type) && supportsLinearEasing()) {\n        return type.applyToOptions(options);\n    }\n    else {\n        options.duration ?? (options.duration = 300);\n        options.ease ?? (options.ease = \"easeOut\");\n    }\n    return options;\n}\n\nexport { applyGeneratorOptions };\n","import { isCSSVar } from './is-css-var.mjs';\n\nfunction setStyle(element, name, value) {\n    isCSSVar(name)\n        ? element.style.setProperty(name, value)\n        : (element.style[name] = value);\n}\n\nexport { setStyle };\n","const isCSSVar = (name) => name.startsWith(\"--\");\n\nexport { isCSSVar };\n","import { anticipate, backInOut, circInOut } from 'motion-utils';\n\nconst unsupportedEasingFunctions = {\n    anticipate,\n    backInOut,\n    circInOut,\n};\nfunction isUnsupportedEase(key) {\n    return key in unsupportedEasingFunctions;\n}\nfunction replaceStringEasing(transition) {\n    if (typeof transition.ease === \"string\" &&\n        isUnsupportedEase(transition.ease)) {\n        transition.ease = unsupportedEasingFunctions[transition.ease];\n    }\n}\n\nexport { replaceStringEasing };\n","import { secondsToMilliseconds } from 'motion-utils';\nimport { JSAnimation } from './JSAnimation.mjs';\nimport { NativeAnimation } from './NativeAnimation.mjs';\nimport { replaceTransitionType } from './utils/replace-transition-type.mjs';\nimport { replaceStringEasing } from './waapi/utils/unsupported-easing.mjs';\n\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\nclass NativeAnimationExtended extends NativeAnimation {\n    constructor(options) {\n        /**\n         * The base NativeAnimation function only supports a subset\n         * of Motion easings, and WAAPI also only supports some\n         * easing functions via string/cubic-bezier definitions.\n         *\n         * This function replaces those unsupported easing functions\n         * with a JS easing function. This will later get compiled\n         * to a linear() easing function.\n         */\n        replaceStringEasing(options);\n        /**\n         * Ensure we replace the transition type with a generator function\n         * before passing to WAAPI.\n         *\n         * TODO: Does this have a better home? It could be shared with\n         * JSAnimation.\n         */\n        replaceTransitionType(options);\n        super(options);\n        if (options.startTime) {\n            this.startTime = options.startTime;\n        }\n        this.options = options;\n    }\n    /**\n     * WAAPI doesn't natively have any interruption capabilities.\n     *\n     * Rather than read commited styles back out of the DOM, we can\n     * create a renderless JS animation and sample it twice to calculate\n     * its current value, \"previous\" value, and therefore allow\n     * Motion to calculate velocity for any subsequent animation.\n     */\n    updateMotionValue(value) {\n        const { motionValue, onUpdate, onComplete, element, ...options } = this.options;\n        if (!motionValue)\n            return;\n        if (value !== undefined) {\n            motionValue.set(value);\n            return;\n        }\n        const sampleAnimation = new JSAnimation({\n            ...options,\n            autoplay: false,\n        });\n        const sampleTime = secondsToMilliseconds(this.finishedTime ?? this.time);\n        motionValue.setWithVelocity(sampleAnimation.sample(sampleTime - sampleDelta).value, sampleAnimation.sample(sampleTime).value, sampleDelta);\n        sampleAnimation.stop();\n    }\n}\n\nexport { NativeAnimationExtended };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (value, name) => {\n    // If the list of keys that might be non-animatable grows, replace with Set\n    if (name === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { memo } from 'motion-utils';\n\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    // TODO: Could be re-enabled now we have support for linear() easing\n    // \"background-color\"\n]);\nconst supportsWaapi = /*@__PURE__*/ memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\nfunction supportsBrowserAnimation(options) {\n    const { motionValue, name, repeatDelay, repeatType, damping, type } = options;\n    const subject = motionValue?.owner?.current;\n    /**\n     * We use this check instead of isHTMLElement() because we explicitly\n     * **don't** want elements in different timing contexts (i.e. popups)\n     * to be accelerated, as it's not possible to sync these animations\n     * properly with those driven from the main window frameloop.\n     */\n    if (!(subject instanceof HTMLElement)) {\n        return false;\n    }\n    const { onUpdate, transformTemplate } = motionValue.owner.getProps();\n    return (supportsWaapi() &&\n        name &&\n        acceleratedValues.has(name) &&\n        (name !== \"transform\" || !transformTemplate) &&\n        /**\n         * If we're outputting values to onUpdate then we can't use WAAPI as there's\n         * no way to read the value from WAAPI every frame.\n         */\n        !onUpdate &&\n        !repeatDelay &&\n        repeatType !== \"mirror\" &&\n        damping !== 0 &&\n        type !== \"inertia\");\n}\n\nexport { supportsBrowserAnimation };\n","import { MotionGlobalConfig, noop } from 'motion-utils';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { JSAnimation } from './JSAnimation.mjs';\nimport { getFinalKeyframe } from './keyframes/get-final.mjs';\nimport { KeyframeResolver, flushKeyframeResolvers } from './keyframes/KeyframesResolver.mjs';\nimport { NativeAnimationExtended } from './NativeAnimationExtended.mjs';\nimport { canAnimate } from './utils/can-animate.mjs';\nimport { makeAnimationInstant } from './utils/make-animation-instant.mjs';\nimport { WithPromise } from './utils/WithPromise.mjs';\nimport { supportsBrowserAnimation } from './waapi/supports/waapi.mjs';\n\n/**\n * Maximum time allowed between an animation being created and it being\n * resolved for us to use the latter as the start time.\n *\n * This is to ensure that while we prefer to \"start\" an animation as soon\n * as it's triggered, we also want to avoid a visual jump if there's a big delay\n * between these two moments.\n */\nconst MAX_RESOLVE_DELAY = 40;\nclass AsyncMotionValueAnimation extends WithPromise {\n    constructor({ autoplay = true, delay = 0, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", keyframes, name, motionValue, element, ...options }) {\n        super();\n        /**\n         * Bound to support return animation.stop pattern\n         */\n        this.stop = () => {\n            if (this._animation) {\n                this._animation.stop();\n                this.stopTimeline?.();\n            }\n            this.keyframeResolver?.cancel();\n        };\n        this.createdAt = time.now();\n        const optionsWithDefaults = {\n            autoplay,\n            delay,\n            type,\n            repeat,\n            repeatDelay,\n            repeatType,\n            name,\n            motionValue,\n            element,\n            ...options,\n        };\n        const KeyframeResolver$1 = element?.KeyframeResolver || KeyframeResolver;\n        this.keyframeResolver = new KeyframeResolver$1(keyframes, (resolvedKeyframes, finalKeyframe, forced) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe, optionsWithDefaults, !forced), name, motionValue, element);\n        this.keyframeResolver?.scheduleResolve();\n    }\n    onKeyframesResolved(keyframes, finalKeyframe, options, sync) {\n        this.keyframeResolver = undefined;\n        const { name, type, velocity, delay, isHandoff, onUpdate } = options;\n        this.resolvedAt = time.now();\n        /**\n         * If we can't animate this value with the resolved keyframes\n         * then we should complete it immediately.\n         */\n        if (!canAnimate(keyframes, name, type, velocity)) {\n            if (MotionGlobalConfig.instantAnimations || !delay) {\n                onUpdate?.(getFinalKeyframe(keyframes, options, finalKeyframe));\n            }\n            keyframes[0] = keyframes[keyframes.length - 1];\n            makeAnimationInstant(options);\n            options.repeat = 0;\n        }\n        /**\n         * Resolve startTime for the animation.\n         *\n         * This method uses the createdAt and resolvedAt to calculate the\n         * animation startTime. *Ideally*, we would use the createdAt time as t=0\n         * as the following frame would then be the first frame of the animation in\n         * progress, which would feel snappier.\n         *\n         * However, if there's a delay (main thread work) between the creation of\n         * the animation and the first commited frame, we prefer to use resolvedAt\n         * to avoid a sudden jump into the animation.\n         */\n        const startTime = sync\n            ? !this.resolvedAt\n                ? this.createdAt\n                : this.resolvedAt - this.createdAt > MAX_RESOLVE_DELAY\n                    ? this.resolvedAt\n                    : this.createdAt\n            : undefined;\n        const resolvedOptions = {\n            startTime,\n            finalKeyframe,\n            ...options,\n            keyframes,\n        };\n        /**\n         * Animate via WAAPI if possible. If this is a handoff animation, the optimised animation will be running via\n         * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n         * optimised animation.\n         */\n        const animation = !isHandoff && supportsBrowserAnimation(resolvedOptions)\n            ? new NativeAnimationExtended({\n                ...resolvedOptions,\n                element: resolvedOptions.motionValue.owner.current,\n            })\n            : new JSAnimation(resolvedOptions);\n        animation.finished.then(() => this.notifyFinished()).catch(noop);\n        if (this.pendingTimeline) {\n            this.stopTimeline = animation.attachTimeline(this.pendingTimeline);\n            this.pendingTimeline = undefined;\n        }\n        this._animation = animation;\n    }\n    get finished() {\n        if (!this._animation) {\n            return this._finished;\n        }\n        else {\n            return this.animation.finished;\n        }\n    }\n    then(onResolve, _onReject) {\n        return this.finished.finally(onResolve).then(() => { });\n    }\n    get animation() {\n        if (!this._animation) {\n            this.keyframeResolver?.resume();\n            flushKeyframeResolvers();\n        }\n        return this._animation;\n    }\n    get duration() {\n        return this.animation.duration;\n    }\n    get time() {\n        return this.animation.time;\n    }\n    set time(newTime) {\n        this.animation.time = newTime;\n    }\n    get speed() {\n        return this.animation.speed;\n    }\n    get state() {\n        return this.animation.state;\n    }\n    set speed(newSpeed) {\n        this.animation.speed = newSpeed;\n    }\n    get startTime() {\n        return this.animation.startTime;\n    }\n    attachTimeline(timeline) {\n        if (this._animation) {\n            this.stopTimeline = this.animation.attachTimeline(timeline);\n        }\n        else {\n            this.pendingTimeline = timeline;\n        }\n        return () => this.stop();\n    }\n    play() {\n        this.animation.play();\n    }\n    pause() {\n        this.animation.pause();\n    }\n    complete() {\n        this.animation.complete();\n    }\n    cancel() {\n        if (this._animation) {\n            this.animation.cancel();\n        }\n        this.keyframeResolver?.cancel();\n    }\n}\n\nexport { AsyncMotionValueAnimation };\n","import { warning } from 'motion-utils';\nimport { isGenerator } from '../generators/utils/is-generator.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\n\nfunction hasKeyframesChanged(keyframes) {\n    const current = keyframes[0];\n    if (keyframes.length === 1)\n        return true;\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] !== current)\n            return true;\n    }\n}\nfunction canAnimate(keyframes, name, type, velocity) {\n    /**\n     * Check if we're able to animate between the start and end keyframes,\n     * and throw a warning if we're attempting to animate between one that's\n     * animatable and another that isn't.\n     */\n    const originKeyframe = keyframes[0];\n    if (originKeyframe === null)\n        return false;\n    /**\n     * These aren't traditionally animatable but we do support them.\n     * In future we could look into making this more generic or replacing\n     * this function with mix() === mixImmediate\n     */\n    if (name === \"display\" || name === \"visibility\")\n        return true;\n    const targetKeyframe = keyframes[keyframes.length - 1];\n    const isOriginAnimatable = isAnimatable(originKeyframe, name);\n    const isTargetAnimatable = isAnimatable(targetKeyframe, name);\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${name} from \"${originKeyframe}\" to \"${targetKeyframe}\". \"${isOriginAnimatable ? targetKeyframe : originKeyframe}\" is not an animatable value.`, \"value-not-animatable\");\n    // Always skip if any of these are true\n    if (!isOriginAnimatable || !isTargetAnimatable) {\n        return false;\n    }\n    return (hasKeyframesChanged(keyframes) ||\n        ((type === \"spring\" || isGenerator(type)) && velocity));\n}\n\nexport { canAnimate };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","import { transformProps } from 'motion-dom';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { getValueTransition, makeAnimationInstant, frame, JSAnimation, AsyncMotionValueAnimation } from 'motion-dom';\nimport { secondsToMilliseconds, MotionGlobalConfig } from 'motion-utils';\nimport { getFinalKeyframe } from '../animators/waapi/utils/get-final-keyframe.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isTransitionDefined } from '../utils/is-transition-defined.mjs';\n\nconst animateMotionValue = (name, value, target, transition = {}, element, isHandoff) => (onComplete) => {\n    const valueTransition = getValueTransition(transition, name) || {};\n    /**\n     * Most transition values are currently completely overwritten by value-specific\n     * transitions. In the future it'd be nicer to blend these transitions. But for now\n     * delay actually does inherit from the root transition if not value-specific.\n     */\n    const delay = valueTransition.delay || transition.delay || 0;\n    /**\n     * Elapsed isn't a public transition option but can be passed through from\n     * optimized appear effects in milliseconds.\n     */\n    let { elapsed = 0 } = transition;\n    elapsed = elapsed - secondsToMilliseconds(delay);\n    const options = {\n        keyframes: Array.isArray(target) ? target : [null, target],\n        ease: \"easeOut\",\n        velocity: value.getVelocity(),\n        ...valueTransition,\n        delay: -elapsed,\n        onUpdate: (v) => {\n            value.set(v);\n            valueTransition.onUpdate && valueTransition.onUpdate(v);\n        },\n        onComplete: () => {\n            onComplete();\n            valueTransition.onComplete && valueTransition.onComplete();\n        },\n        name,\n        motionValue: value,\n        element: isHandoff ? undefined : element,\n    };\n    /**\n     * If there's no transition defined for this value, we can generate\n     * unique transition settings for this value.\n     */\n    if (!isTransitionDefined(valueTransition)) {\n        Object.assign(options, getDefaultTransition(name, options));\n    }\n    /**\n     * Both WAAPI and our internal animation functions use durations\n     * as defined by milliseconds, while our external API defines them\n     * as seconds.\n     */\n    options.duration && (options.duration = secondsToMilliseconds(options.duration));\n    options.repeatDelay && (options.repeatDelay = secondsToMilliseconds(options.repeatDelay));\n    /**\n     * Support deprecated way to set initial value. Prefer keyframe syntax.\n     */\n    if (options.from !== undefined) {\n        options.keyframes[0] = options.from;\n    }\n    let shouldSkip = false;\n    if (options.type === false ||\n        (options.duration === 0 && !options.repeatDelay)) {\n        makeAnimationInstant(options);\n        if (options.delay === 0) {\n            shouldSkip = true;\n        }\n    }\n    if (MotionGlobalConfig.instantAnimations ||\n        MotionGlobalConfig.skipAnimations) {\n        shouldSkip = true;\n        makeAnimationInstant(options);\n        options.delay = 0;\n    }\n    /**\n     * If the transition type or easing has been explicitly set by the user\n     * then we don't want to allow flattening the animation.\n     */\n    options.allowFlatten = !valueTransition.type && !valueTransition.ease;\n    /**\n     * If we can or must skip creating the animation, and apply only\n     * the final keyframe, do so. We also check once keyframes are resolved but\n     * this early check prevents the need to create an animation at all.\n     */\n    if (shouldSkip && !isHandoff && value.get() !== undefined) {\n        const finalKeyframe = getFinalKeyframe(options.keyframes, valueTransition);\n        if (finalKeyframe !== undefined) {\n            frame.update(() => {\n                options.onUpdate(finalKeyframe);\n                options.onComplete();\n            });\n            return;\n        }\n    }\n    return valueTransition.isSync\n        ? new JSAnimation(options)\n        : new AsyncMotionValueAnimation(options);\n};\n\nexport { animateMotionValue };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\n\nexport { isTransitionDefined };\n","import { getValueTransition, frame, positionalKeys } from 'motion-dom';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { getOptimisedAppearId } from '../optimized-appear/get-appear-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, targetAndTransition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = targetAndTransition;\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key, visualElement.latestValues[key] ?? null);\n        const valueTarget = target[key];\n        if (valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If the value is already at the defined target, skip the animation.\n         */\n        const currentValue = value.get();\n        if (currentValue !== undefined &&\n            !value.isAnimating &&\n            !Array.isArray(valueTarget) &&\n            valueTarget === currentValue &&\n            !valueTransition.velocity) {\n            continue;\n        }\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        let isHandoff = false;\n        if (window.MotionHandoffAnimation) {\n            const appearId = getOptimisedAppearId(visualElement);\n            if (appearId) {\n                const startTime = window.MotionHandoffAnimation(appearId, key, frame);\n                if (startTime !== null) {\n                    valueTransition.startTime = startTime;\n                    isHandoff = true;\n                }\n            }\n        }\n        addValueToWillChange(visualElement, key);\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && positionalKeys.has(key)\n            ? { type: false }\n            : valueTransition, visualElement, isHandoff));\n        const animation = value.animation;\n        if (animation) {\n            animations.push(animation);\n        }\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            frame.update(() => {\n                transitionEnd && setTarget(visualElement, transitionEnd);\n            });\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","function calcChildStagger(children, child, delayChildren, staggerChildren = 0, staggerDirection = 1) {\n    const index = Array.from(children)\n        .sort((a, b) => a.sortNodePosition(b))\n        .indexOf(child);\n    const numChildren = children.size;\n    const maxStaggerDuration = (numChildren - 1) * staggerChildren;\n    const delayIsFunction = typeof delayChildren === \"function\";\n    return delayIsFunction\n        ? delayChildren(index, numChildren)\n        : staggerDirection === 1\n            ? index * staggerChildren\n            : maxStaggerDuration - index * staggerChildren;\n}\n\nexport { calcChildStagger };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { calcChildStagger } from '../utils/calc-child-stagger.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.type === \"exit\"\n        ? visualElement.presenceContext?.custom\n        : undefined);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, forwardDelay, delayChildren, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delay = 0, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    for (const child of visualElement.variantChildren) {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delay +\n                (typeof delayChildren === \"function\" ? 0 : delayChildren) +\n                calcChildStagger(visualElement.variantChildren, child, delayChildren, staggerChildren, staggerDirection),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    }\n    return Promise.all(animations);\n}\n\nexport { animateVariant };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nconst numVariantProps = variantProps.length;\nfunction getVariantContext(visualElement) {\n    if (!visualElement)\n        return undefined;\n    if (!visualElement.isControllingVariants) {\n        const context = visualElement.parent\n            ? getVariantContext(visualElement.parent) || {}\n            : {};\n        if (visualElement.props.initial !== undefined) {\n            context.initial = visualElement.props.initial;\n        }\n        return context;\n    }\n    const context = {};\n    for (let i = 0; i < numVariantProps; i++) {\n        const name = variantProps[i];\n        const prop = visualElement.props[name];\n        if (isVariantLabel(prop) || prop === false) {\n            context[name] = prop;\n        }\n    }\n    return context;\n}\n\nexport { getVariantContext };\n","import { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\nimport { calcChildStagger } from '../../animation/utils/calc-child-stagger.mjs';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { getVariantContext } from './get-variant-context.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    let state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (type) => (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition, type === \"exit\"\n            ? visualElement.presenceContext?.custom\n            : undefined);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(changedActiveType) {\n        const { props } = visualElement;\n        const context = getVariantContext(visualElement.parent) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined\n                ? props[type]\n                : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] &&\n                prop !== props[type] &&\n                propIsVariant;\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues(type), {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = false;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined && next !== null) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to skip this animation\n             * unless the inherited variants haven't changed on this render.\n             */\n            const willAnimateViaParent = isInherited && variantDidChange;\n            const needsAnimating = !willAnimateViaParent || handledRemovedValues;\n            if (shouldAnimateType && needsAnimating) {\n                animations.push(...definitionList.map((animation) => {\n                    const options = { type };\n                    /**\n                     * If we're performing the initial animation, but we're not\n                     * rendering at the same time as the variant-controlling parent,\n                     * we want to use the parent's transition to calculate the stagger.\n                     */\n                    if (typeof animation === \"string\" &&\n                        isInitialRender &&\n                        !willAnimateViaParent &&\n                        visualElement.manuallyAnimateOnMount &&\n                        visualElement.parent) {\n                        const { parent } = visualElement;\n                        const parentVariant = resolveVariant(parent, animation);\n                        if (parent.enteringChildren && parentVariant) {\n                            const { delayChildren } = parentVariant.transition || {};\n                            options.delay = calcChildStagger(parent.enteringChildren, visualElement, delayChildren);\n                        }\n                    }\n                    return {\n                        animation: animation,\n                        options,\n                    };\n                }));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            /**\n             * If the initial prop contains a transition we can use that, otherwise\n             * allow the animation function to use the visual element's default.\n             */\n            if (typeof props.initial !== \"boolean\") {\n                const initialTransition = resolveVariant(visualElement, Array.isArray(props.initial)\n                    ? props.initial[0]\n                    : props.initial);\n                if (initialTransition && initialTransition.transition) {\n                    fallbackAnimation.transition = initialTransition.transition;\n                }\n            }\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = true;\n                // @ts-expect-error - @mattgperry to figure if we should do something here\n                fallbackAnimation[key] = fallbackTarget ?? null;\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive) {\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        visualElement.variantChildren?.forEach((child) => child.animationState?.setActive(type, isActive));\n        state[type].isActive = isActive;\n        const animations = animateChanges(type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n        reset: () => {\n            state = createState();\n            isInitialRender = true;\n        },\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => {\n        visualElement.notify(\"AnimationComplete\", definition);\n    });\n}\n\nexport { animateVisualElement };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent);\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => {\n                onExitComplete(this.id);\n            });\n        }\n    }\n    mount() {\n        const { register, onExitComplete } = this.node.presenceContext || {};\n        if (onExitComplete) {\n            onExitComplete(this.id);\n        }\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        if (isAnimationControls(animate)) {\n            this.unmountControls = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() {\n        this.node.animationState.reset();\n        this.unmountControls?.();\n    }\n}\n\nexport { AnimationFeature };\n","const isDragging = {\n    x: false,\n    y: false,\n};\nfunction isDragActive() {\n    return isDragging.x || isDragging.y;\n}\n\nexport { isDragActive, isDragging };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from 'motion-dom';\n\nfunction extractEventInfo(event) {\n    return {\n        point: {\n            x: event.pageX,\n            y: event.pageY,\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","import { mixNumber } from 'motion-dom';\n\nconst SCALE_PRECISION = 0.0001;\nconst SCALE_MIN = 1 - SCALE_PRECISION;\nconst SCALE_MAX = 1 + SCALE_PRECISION;\nconst TRANSLATE_PRECISION = 0.01;\nconst TRANSLATE_MIN = 0 - TRANSLATE_PRECISION;\nconst TRANSLATE_MAX = 0 + TRANSLATE_PRECISION;\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target, maxDistance) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mixNumber(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    delta.translate =\n        mixNumber(target.min, target.max, delta.origin) - delta.originPoint;\n    if ((delta.scale >= SCALE_MIN && delta.scale <= SCALE_MAX) ||\n        isNaN(delta.scale)) {\n        delta.scale = 1.0;\n    }\n    if ((delta.translate >= TRANSLATE_MIN &&\n        delta.translate <= TRANSLATE_MAX) ||\n        isNaN(delta.translate)) {\n        delta.translate = 0.0;\n    }\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","// Fixes https://github.com/motiondivision/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { frame, isPrimaryPointer, cancelFrame, frameData } from 'motion-dom';\nimport { pipe, secondsToMilliseconds, millisecondsToSeconds } from 'motion-utils';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow = window, dragSnapToOrigin = false, distanceThreshold = 3, } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursor.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= this.distanceThreshold;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.distanceThreshold = distanceThreshold;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mixNumber } from 'motion-dom';\nimport { progress, clamp } from 'motion-utils';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(min, point, elastic.min)\n            : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(max, point, elastic.max)\n            : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","import { frame, mixNumber, setDragLock, percent } from 'motion-dom';\nimport { invariant } from 'motion-utils';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\n\nconst elementDragControls = new WeakMap();\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        this.openDragLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        /**\n         * The latest pointer event. Used as fallback when the `cancel` and `stop` functions are called without arguments.\n         */\n        this.latestPointerEvent = null;\n        /**\n         * The latest pan info. Used as fallback when the `cancel` and `stop` functions are called without arguments.\n         */\n        this.latestPanInfo = null;\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false, distanceThreshold } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event).point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openDragLock)\n                    this.openDragLock();\n                this.openDragLock = setDragLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openDragLock)\n                    return;\n            }\n            this.latestPointerEvent = event;\n            this.latestPanInfo = info;\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.postRender(() => onDragStart(event, info));\n            }\n            addValueToWillChange(this.visualElement, \"transform\");\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            this.latestPointerEvent = event;\n            this.latestPanInfo = info;\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openDragLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => {\n            this.latestPointerEvent = event;\n            this.latestPanInfo = info;\n            this.stop(event, info);\n            this.latestPointerEvent = null;\n            this.latestPanInfo = null;\n        };\n        const resumeAnimation = () => eachAxis((axis) => this.getAnimationState(axis) === \"paused\" &&\n            this.getAxisMotionValue(axis).animation?.play());\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            distanceThreshold,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    /**\n     * @internal\n     */\n    stop(event, panInfo) {\n        const finalEvent = event || this.latestPointerEvent;\n        const finalPanInfo = panInfo || this.latestPanInfo;\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging || !finalPanInfo || !finalEvent)\n            return;\n        const { velocity } = finalPanInfo;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.postRender(() => onDragEnd(finalEvent, finalPanInfo));\n        }\n    }\n    /**\n     * @internal\n     */\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openDragLock) {\n            this.openDragLock();\n            this.openDragLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : this.visualElement.projection?.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.constraints !== false &&\n                    this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\", \"drag-constraints-ref\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        addValueToWillChange(this.visualElement, axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition, this.visualElement, false));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).animation?.pause());\n    }\n    getAnimationState(axis) {\n        return this.getAxisMotionValue(axis).animation?.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = `_drag${axis.toUpperCase()}`;\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial\n                ? props.initial[axis]\n                : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mixNumber(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue && this.constraints !== false) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mixNumber(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints) && dragConstraints.current) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        frame.read(measureDragConstraints);\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { isDragging } from './is-active.mjs';\n\nfunction setDragLock(axis) {\n    if (axis === \"x\" || axis === \"y\") {\n        if (isDragging[axis]) {\n            return null;\n        }\n        else {\n            isDragging[axis] = true;\n            return () => {\n                isDragging[axis] = false;\n            };\n        }\n    }\n    else {\n        if (isDragging.x || isDragging.y) {\n            return null;\n        }\n        else {\n            isDragging.x = isDragging.y = true;\n            return () => {\n                isDragging.x = isDragging.y = false;\n            };\n        }\n    }\n}\n\nexport { setDragLock };\n","import { frame } from 'motion-dom';\nimport { noop } from 'motion-utils';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { PanSession } from './PanSession.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.postRender(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.postRender(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from 'motion-dom';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { complex, mixNumber } from 'motion-dom';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mixNumber(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport { frame, microtask } from 'motion-dom';\nimport { useContext, Component } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\n/**\n * Track whether we've taken any snapshots yet. If not,\n * we can safely skip notification of didUpdate.\n *\n * Difficult to capture in a test but to prevent flickering\n * we must set this to true either on update or unmount.\n * Running `next-env/layout-id` in Safari will show this behaviour if broken.\n */\nlet hasTakenAnySnapshot = false;\nclass MeasureLayoutWithContext extends Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            if (hasTakenAnySnapshot) {\n                projection.root.didUpdate();\n            }\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const { projection } = visualElement;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        hasTakenAnySnapshot = true;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined ||\n            prevProps.isPresent !== isPresent) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            microtask.postRender(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        hasTakenAnySnapshot = true;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (jsx(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect, useCallback } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence(subscribe = true) {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => {\n        if (subscribe) {\n            return register(id);\n        }\n    }, [subscribe]);\n    const safeToRemove = useCallback(() => subscribe && onExitComplete && onExitComplete(id), [id, onExitComplete, subscribe]);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","function isObject(value) {\n    return typeof value === \"object\" && value !== null;\n}\n\nexport { isObject };\n","import { isObject } from 'motion-utils';\n\n/**\n * Checks if an element is an SVG element in a way\n * that works across iframes\n */\nfunction isSVGElement(element) {\n    return isObject(element) && \"ownerSVGElement\" in element;\n}\n\nexport { isSVGElement };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from 'motion-utils';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { time, frame, cancelFrame } from 'motion-dom';\nimport { secondsToMilliseconds } from 'motion-utils';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = time.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.setup(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\nfunction delayInSeconds(callback, timeout) {\n    return delay(callback, secondsToMilliseconds(timeout));\n}\n\nexport { delay, delayInSeconds };\n","import { mixNumber, percent, px } from 'motion-dom';\nimport { progress, circOut, noop } from 'motion-utils';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mixNumber(0, lead.opacity ?? 1, easeCrossfadeIn(progress));\n        target.opacityExit = mixNumber(follow.opacity ?? 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mixNumber(follow.opacity ?? 1, lead.opacity ?? 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mixNumber(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mixNumber(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = /*@__PURE__*/ compress(0, 0.5, circOut);\nconst easeCrossfadeOut = /*@__PURE__*/ compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n/**\n * Reset a delta to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisDeltaInto(delta, originDelta) {\n    delta.translate = originDelta.translate;\n    delta.scale = originDelta.scale;\n    delta.originPoint = originDelta.originPoint;\n    delta.origin = originDelta.origin;\n}\n\nexport { copyAxisDeltaInto, copyAxisInto, copyBoxInto };\n","import { percent, mixNumber } from 'motion-dom';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mixNumber(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mixNumber(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction axisEquals(a, b) {\n    return a.min === b.min && a.max === b.max;\n}\nfunction boxEquals(a, b) {\n    return axisEquals(a.x, b.x) && axisEquals(a.y, b.y);\n}\nfunction axisEqualsRounded(a, b) {\n    return (Math.round(a.min) === Math.round(b.min) &&\n        Math.round(a.max) === Math.round(b.max));\n}\nfunction boxEqualsRounded(a, b) {\n    return axisEqualsRounded(a.x, b.x) && axisEqualsRounded(a.y, b.y);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\nfunction axisDeltaEquals(a, b) {\n    return (a.translate === b.translate &&\n        a.scale === b.scale &&\n        a.originPoint === b.originPoint);\n}\n\nexport { aspectRatio, axisDeltaEquals, axisEquals, axisEqualsRounded, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from 'motion-utils';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","import { statsBuffer, isSVGElement, isSVGSVGElement, frame, getValueTransition, cancelFrame, time, frameData, frameSteps, microtask, activeAnimations, motionValue, mixNumber } from 'motion-dom';\nimport { SubscriptionManager, clamp, noop } from 'motion-utils';\nimport { animateSingleValue } from '../../animation/animate/single-value.mjs';\nimport { getOptimisedAppearId } from '../../animation/optimized-appear/get-appear-id.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto, copyAxisDeltaInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcLength, calcRelativePosition, calcRelativeBox, calcBoxDelta, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { boxEqualsRounded, isDeltaZero, axisDeltaEquals, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { globalProjectionState } from './state.mjs';\n\nconst metrics = {\n    nodes: 0,\n    calculatedTargetDeltas: 0,\n    calculatedProjections: 0,\n};\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\nfunction resetDistortingTransform(key, visualElement, values, sharedAnimationValues) {\n    const { latestValues } = visualElement;\n    // Record the distorting transform and then temporarily set it to 0\n    if (latestValues[key]) {\n        values[key] = latestValues[key];\n        visualElement.setStaticValue(key, 0);\n        if (sharedAnimationValues) {\n            sharedAnimationValues[key] = 0;\n        }\n    }\n}\nfunction cancelTreeOptimisedTransformAnimations(projectionNode) {\n    projectionNode.hasCheckedOptimisedAppear = true;\n    if (projectionNode.root === projectionNode)\n        return;\n    const { visualElement } = projectionNode.options;\n    if (!visualElement)\n        return;\n    const appearId = getOptimisedAppearId(visualElement);\n    if (window.MotionHasOptimisedAnimation(appearId, \"transform\")) {\n        const { layout, layoutId } = projectionNode.options;\n        window.MotionCancelOptimisedAnimation(appearId, \"transform\", frame, !(layout || layoutId));\n    }\n    const { parent } = projectionNode;\n    if (parent && !parent.hasCheckedOptimisedAppear) {\n        cancelTreeOptimisedTransformAnimations(parent);\n    }\n}\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent?.()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            this.animationCommitId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * Store whether this node has been checked for optimised appear animations. As\n             * effects fire bottom-up, and we want to look up the tree for appear animations,\n             * this makes sure we only check each path once, stopping at nodes that\n             * have already been checked.\n             */\n            this.hasCheckedOptimisedAppear = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.scheduleUpdate = () => this.update();\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                if (statsBuffer.value) {\n                    metrics.nodes =\n                        metrics.calculatedTargetDeltas =\n                            metrics.calculatedProjections =\n                                0;\n                }\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                if (statsBuffer.addProjectionMetrics) {\n                    statsBuffer.addProjectionMetrics(metrics);\n                }\n            };\n            /**\n             * Frame calculations\n             */\n            this.resolvedRelativeTargetAt = 0.0;\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance) && !isSVGSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (this.root.hasTreeAnimated && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                let innerWidth = 0;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                // Set initial innerWidth in a frame.read callback to batch the read\n                frame.read(() => {\n                    innerWidth = window.innerWidth;\n                });\n                attachResizeListener(instance, () => {\n                    const newInnerWidth = window.innerWidth;\n                    if (newInnerWidth === innerWidth)\n                        return;\n                    innerWidth = newInnerWidth;\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeLayoutChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const hasTargetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout);\n                    /*\n                     * Note: Disabled to fix relative animations always triggering new\n                     * layout animations. If this causes further issues, we can try\n                     * a different approach to detecting relative target changes.\n                     */\n                    // || hasRelativeLayoutChanged\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeLayoutChanged;\n                    if (this.options.layoutRoot ||\n                        this.resumeFrom ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (hasTargetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                        /**\n                         * Set animation origin after starting animation to avoid layout jump\n                         * caused by stopping previous layout animation\n                         */\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            this.eventHandlers.clear();\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetSkewAndRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            /**\n             * If we're running optimised appear animations then these must be\n             * cancelled before measuring the DOM. This is so we can measure\n             * the true layout of the element rather than the WAAPI animation\n             * which will be unaffected by the resetSkewAndRotate step.\n             *\n             * Note: This is a DOM write. Worst case scenario is this is sandwiched\n             * between other snapshot reads which will cause unnecessary style recalculations.\n             * This has to happen here though, as we don't yet know which nodes will need\n             * snapshots in startUpdate(), but we only want to cancel optimised animations\n             * if a layout animation measurement is actually going to be affected by them.\n             */\n            if (window.MotionCancelOptimisedAnimation &&\n                !this.hasCheckedOptimisedAppear) {\n                cancelTreeOptimisedTransformAnimations(this);\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            /**\n             * If this is a repeat of didUpdate then ignore the animation.\n             */\n            if (this.animationId <= this.animationCommitId) {\n                this.nodes.forEach(clearIsLayoutDirty);\n                return;\n            }\n            this.animationCommitId = this.animationId;\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            else {\n                this.isUpdating = false;\n                /**\n                 * Write\n                 */\n                this.nodes.forEach(resetTransformStyle);\n                /**\n                 * Read ==================\n                 */\n                // Update layout measurements of updated children\n                this.nodes.forEach(updateLayout);\n                /**\n                 * Write\n                 */\n                // Notify listeners that the layout is updated\n                this.nodes.forEach(notifyLayoutUpdate);\n            }\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = time.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            frameSteps.update.process(frameData);\n            frameSteps.preRender.process(frameData);\n            frameSteps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                microtask.read(this.scheduleUpdate);\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n            if (this.snapshot &&\n                !calcLength(this.snapshot.measuredBox.x) &&\n                !calcLength(this.snapshot.measuredBox.y)) {\n                this.snapshot = undefined;\n            }\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement && this.instance) {\n                const isRoot = checkIsScrollRoot(this.instance);\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot,\n                    offset: measureScroll(this.instance),\n                    wasRoot: this.scroll ? this.scroll.isRoot : isRoot,\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty ||\n                this.shouldResetTransform ||\n                this.options.alwaysMeasureLayout;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                this.instance &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            const wasInScrollRoot = this.scroll?.wasRoot || this.path.some(checkNodeWasScrollRoot);\n            if (!wasInScrollRoot) {\n                // Remove viewport scroll to give page-relative coordinates\n                const { scroll } = this.root;\n                if (scroll) {\n                    translateAxis(box.x, scroll.offset.x);\n                    translateAxis(box.y, scroll.offset.y);\n                }\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            if (this.scroll?.wasRoot) {\n                return boxWithoutScroll;\n            }\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.wasRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                this.parent?.isProjectionDirty ||\n                this.attemptToResolveRelativeTarget ||\n                this.root.updateBlockedByResize);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            if (!this.targetDelta && !this.relativeTarget) {\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            if (statsBuffer.value) {\n                metrics.calculatedTargetDeltas++;\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || this.parent?.isProjectionDirty) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n                lead.targetWithTransforms = createBox();\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.prevProjectionDelta) {\n                    this.createProjectionDeltas();\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta || !this.prevProjectionDelta) {\n                this.createProjectionDeltas();\n            }\n            else {\n                copyAxisDeltaInto(this.prevProjectionDelta.x, this.projectionDelta.x);\n                copyAxisDeltaInto(this.prevProjectionDelta.y, this.projectionDelta.y);\n            }\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            if (this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY ||\n                !axisDeltaEquals(this.projectionDelta.x, this.prevProjectionDelta.x) ||\n                !axisDeltaEquals(this.projectionDelta.y, this.prevProjectionDelta.y)) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            if (statsBuffer.value) {\n                metrics.calculatedProjections++;\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.visualElement?.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        createProjectionDeltas() {\n            this.prevProjectionDelta = createDelta();\n            this.projectionDelta = createDelta();\n            this.projectionDeltaWithTransform = createDelta();\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot ? snapshot.latestValues : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation?.stop();\n            this.resumingFrom?.currentAnimation?.stop();\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                activeAnimations.layout++;\n                this.motionValue || (this.motionValue = motionValue(0));\n                this.currentAnimation = animateSingleValue(this.motionValue, [0, 1000], {\n                    ...options,\n                    velocity: 0,\n                    isSync: true,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onStop: () => {\n                        activeAnimations.layout--;\n                    },\n                    onComplete: () => {\n                        activeAnimations.layout--;\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            const { layoutId } = this.options;\n            return layoutId ? this.getStack()?.lead || this : this;\n        }\n        getPrevLead() {\n            const { layoutId } = this.options;\n            return layoutId ? this.getStack()?.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetSkewAndRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected skew or rotation values, we can early return without a forced render.\n            let hasDistortingTransform = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.z ||\n                latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ ||\n                latestValues.skewX ||\n                latestValues.skewY) {\n                hasDistortingTransform = true;\n            }\n            // If there's no distorting values, we don't need to do any more.\n            if (!hasDistortingTransform)\n                return;\n            const resetValues = {};\n            if (latestValues.z) {\n                resetDistortingTransform(\"z\", visualElement, resetValues, this.animationValues);\n            }\n            // Check the skew and rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                resetDistortingTransform(`rotate${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n                resetDistortingTransform(`skew${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n            }\n            // Force a render of this element to apply the transform with all skews and rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n                if (this.animationValues) {\n                    this.animationValues[key] = resetValues[key];\n                }\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        applyProjectionStyles(targetStyle, // CSSStyleDeclaration - doesn't allow numbers to be assigned to properties\n        styleProp) {\n            if (!this.instance || this.isSVG)\n                return;\n            if (!this.isVisible) {\n                targetStyle.visibility = \"hidden\";\n                return;\n            }\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                targetStyle.visibility = \"\";\n                targetStyle.opacity = \"\";\n                targetStyle.pointerEvents =\n                    resolveMotionValue(styleProp?.pointerEvents) || \"\";\n                targetStyle.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                if (this.options.layoutId) {\n                    targetStyle.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    targetStyle.pointerEvents =\n                        resolveMotionValue(styleProp?.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    targetStyle.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return;\n            }\n            targetStyle.visibility = \"\";\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            let transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                transform = transformTemplate(valuesToRender, transform);\n            }\n            targetStyle.transform = transform;\n            const { x, y } = this.projectionDelta;\n            targetStyle.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                targetStyle.opacity =\n                    lead === this\n                        ? valuesToRender.opacity ??\n                            this.latestValues.opacity ??\n                            1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                targetStyle.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo, isCSSVariable } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        targetStyle[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    // If this is a CSS variable, set it directly on the instance.\n                    // Replacing this function from creating styles to setting them\n                    // would be a good place to remove per frame object creation\n                    if (isCSSVariable) {\n                        this.options.visualElement.renderState.vars[key] = corrected;\n                    }\n                    else {\n                        targetStyle[key] = corrected;\n                    }\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                targetStyle.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp?.pointerEvents) || \"\"\n                        : \"none\";\n            }\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => node.currentAnimation?.stop());\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    const snapshot = node.resumeFrom?.snapshot || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeLayoutChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeLayoutChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeLayoutChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    if (statsBuffer.value) {\n        metrics.nodes++;\n    }\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetSkewAndRotation(node) {\n    node.resetSkewAndRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mixNumber(delta.translate, 0, p);\n    output.scale = mixNumber(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mixNumber(from.min, to.min, p);\n    output.max = mixNumber(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\nfunction checkNodeWasScrollRoot(node) {\n    return node !== node.root && node.scroll?.wasRoot;\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","import { isSVGElement } from './is-svg-element.mjs';\n\n/**\n * Checks if an element is specifically an SVGSVGElement (the root SVG element)\n * in a way that works across iframes\n */\nfunction isSVGSVGElement(element) {\n    return isSVGElement(element) && element.tagName === \"svg\";\n}\n\nexport { isSVGSVGElement };\n","import { isMotionValue, motionValue } from 'motion-dom';\nimport { animateMotionValue } from '../interfaces/motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    const zTranslate = latestTransform?.z || 0;\n    if (xTranslate || yTranslate || zTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, ${zTranslate}px) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { transformPerspective, rotate, rotateX, rotateY, skewX, skewY } = latestTransform;\n        if (transformPerspective)\n            transform = `perspective(${transformPerspective}px) ${transform}`;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n        if (skewX)\n            transform += `skewX(${skewX}deg) `;\n        if (skewY)\n            transform += `skewY(${skewY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","import { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { createProjectionNode } from './create-projection-node.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from 'motion-utils';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { resolveElements } from '../../utils/resolve-elements.mjs';\n\nfunction setupGesture(elementOrSelector, options) {\n    const elements = resolveElements(elementOrSelector);\n    const gestureAbortController = new AbortController();\n    const eventOptions = {\n        passive: true,\n        ...options,\n        signal: gestureAbortController.signal,\n    };\n    const cancel = () => gestureAbortController.abort();\n    return [elements, eventOptions, cancel];\n}\n\nexport { setupGesture };\n","function resolveElements(elementOrSelector, scope, selectorCache) {\n    if (elementOrSelector instanceof EventTarget) {\n        return [elementOrSelector];\n    }\n    else if (typeof elementOrSelector === \"string\") {\n        let root = document;\n        if (scope) {\n            root = scope.current;\n        }\n        const elements = selectorCache?.[elementOrSelector] ??\n            root.querySelectorAll(elementOrSelector);\n        return elements ? Array.from(elements) : [];\n    }\n    return Array.from(elementOrSelector);\n}\n\nexport { resolveElements };\n","import { isDragActive } from './drag/state/is-active.mjs';\nimport { setupGesture } from './utils/setup.mjs';\n\nfunction isValidHover(event) {\n    return !(event.pointerType === \"touch\" || isDragActive());\n}\n/**\n * Create a hover gesture. hover() is different to .addEventListener(\"pointerenter\")\n * in that it has an easier syntax, filters out polyfilled touch events, interoperates\n * with drag gestures, and automatically removes the \"pointerennd\" event listener when the hover ends.\n *\n * @public\n */\nfunction hover(elementOrSelector, onHoverStart, options = {}) {\n    const [elements, eventOptions, cancel] = setupGesture(elementOrSelector, options);\n    const onPointerEnter = (enterEvent) => {\n        if (!isValidHover(enterEvent))\n            return;\n        const { target } = enterEvent;\n        const onHoverEnd = onHoverStart(target, enterEvent);\n        if (typeof onHoverEnd !== \"function\" || !target)\n            return;\n        const onPointerLeave = (leaveEvent) => {\n            if (!isValidHover(leaveEvent))\n                return;\n            onHoverEnd(leaveEvent);\n            target.removeEventListener(\"pointerleave\", onPointerLeave);\n        };\n        target.addEventListener(\"pointerleave\", onPointerLeave, eventOptions);\n    };\n    elements.forEach((element) => {\n        element.addEventListener(\"pointerenter\", onPointerEnter, eventOptions);\n    });\n    return cancel;\n}\n\nexport { hover };\n","import { hover, frame } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nfunction handleHoverEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.animationState && props.whileHover) {\n        node.animationState.setActive(\"whileHover\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onHover\" + lifecycle);\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass HoverGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = hover(current, (_element, startEvent) => {\n            handleHoverEvent(this.node, startEvent, \"Start\");\n            return (endEvent) => handleHoverEvent(this.node, endEvent, \"End\");\n        });\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","const focusableElements = new Set([\n    \"BUTTON\",\n    \"INPUT\",\n    \"SELECT\",\n    \"TEXTAREA\",\n    \"A\",\n]);\nfunction isElementKeyboardAccessible(element) {\n    return (focusableElements.has(element.tagName) ||\n        element.tabIndex !== -1);\n}\n\nexport { isElementKeyboardAccessible };\n","const isPressing = new WeakSet();\n\nexport { isPressing };\n","import { isPressing } from './state.mjs';\n\n/**\n * Filter out events that are not \"Enter\" keys.\n */\nfunction filterEvents(callback) {\n    return (event) => {\n        if (event.key !== \"Enter\")\n            return;\n        callback(event);\n    };\n}\nfunction firePointerEvent(target, type) {\n    target.dispatchEvent(new PointerEvent(\"pointer\" + type, { isPrimary: true, bubbles: true }));\n}\nconst enableKeyboardPress = (focusEvent, eventOptions) => {\n    const element = focusEvent.currentTarget;\n    if (!element)\n        return;\n    const handleKeydown = filterEvents(() => {\n        if (isPressing.has(element))\n            return;\n        firePointerEvent(element, \"down\");\n        const handleKeyup = filterEvents(() => {\n            firePointerEvent(element, \"up\");\n        });\n        const handleBlur = () => firePointerEvent(element, \"cancel\");\n        element.addEventListener(\"keyup\", handleKeyup, eventOptions);\n        element.addEventListener(\"blur\", handleBlur, eventOptions);\n    });\n    element.addEventListener(\"keydown\", handleKeydown, eventOptions);\n    /**\n     * Add an event listener that fires on blur to remove the keydown events.\n     */\n    element.addEventListener(\"blur\", () => element.removeEventListener(\"keydown\", handleKeydown), eventOptions);\n};\n\nexport { enableKeyboardPress };\n","import { isHTMLElement } from '../../utils/is-html-element.mjs';\nimport { isDragActive } from '../drag/state/is-active.mjs';\nimport { isNodeOrChild } from '../utils/is-node-or-child.mjs';\nimport { isPrimaryPointer } from '../utils/is-primary-pointer.mjs';\nimport { setupGesture } from '../utils/setup.mjs';\nimport { isElementKeyboardAccessible } from './utils/is-keyboard-accessible.mjs';\nimport { enableKeyboardPress } from './utils/keyboard.mjs';\nimport { isPressing } from './utils/state.mjs';\n\n/**\n * Filter out events that are not primary pointer events, or are triggering\n * while a Motion gesture is active.\n */\nfunction isValidPressEvent(event) {\n    return isPrimaryPointer(event) && !isDragActive();\n}\n/**\n * Create a press gesture.\n *\n * Press is different to `\"pointerdown\"`, `\"pointerup\"` in that it\n * automatically filters out secondary pointer events like right\n * click and multitouch.\n *\n * It also adds accessibility support for keyboards, where\n * an element with a press gesture will receive focus and\n *  trigger on Enter `\"keydown\"` and `\"keyup\"` events.\n *\n * This is different to a browser's `\"click\"` event, which does\n * respond to keyboards but only for the `\"click\"` itself, rather\n * than the press start and end/cancel. The element also needs\n * to be focusable for this to work, whereas a press gesture will\n * make an element focusable by default.\n *\n * @public\n */\nfunction press(targetOrSelector, onPressStart, options = {}) {\n    const [targets, eventOptions, cancelEvents] = setupGesture(targetOrSelector, options);\n    const startPress = (startEvent) => {\n        const target = startEvent.currentTarget;\n        if (!isValidPressEvent(startEvent))\n            return;\n        isPressing.add(target);\n        const onPressEnd = onPressStart(target, startEvent);\n        const onPointerEnd = (endEvent, success) => {\n            window.removeEventListener(\"pointerup\", onPointerUp);\n            window.removeEventListener(\"pointercancel\", onPointerCancel);\n            if (isPressing.has(target)) {\n                isPressing.delete(target);\n            }\n            if (!isValidPressEvent(endEvent)) {\n                return;\n            }\n            if (typeof onPressEnd === \"function\") {\n                onPressEnd(endEvent, { success });\n            }\n        };\n        const onPointerUp = (upEvent) => {\n            onPointerEnd(upEvent, target === window ||\n                target === document ||\n                options.useGlobalTarget ||\n                isNodeOrChild(target, upEvent.target));\n        };\n        const onPointerCancel = (cancelEvent) => {\n            onPointerEnd(cancelEvent, false);\n        };\n        window.addEventListener(\"pointerup\", onPointerUp, eventOptions);\n        window.addEventListener(\"pointercancel\", onPointerCancel, eventOptions);\n    };\n    targets.forEach((target) => {\n        const pointerDownTarget = options.useGlobalTarget ? window : target;\n        pointerDownTarget.addEventListener(\"pointerdown\", startPress, eventOptions);\n        if (isHTMLElement(target)) {\n            target.addEventListener(\"focus\", (event) => enableKeyboardPress(event, eventOptions));\n            if (!isElementKeyboardAccessible(target) &&\n                !target.hasAttribute(\"tabindex\")) {\n                target.tabIndex = 0;\n            }\n        }\n    });\n    return cancelEvents;\n}\n\nexport { press };\n","import { isObject } from 'motion-utils';\n\n/**\n * Checks if an element is an HTML element in a way\n * that works across iframes\n */\nfunction isHTMLElement(element) {\n    return isObject(element) && \"offsetHeight\" in element;\n}\n\nexport { isHTMLElement };\n","import { press, frame } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nfunction handlePressEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.current instanceof HTMLButtonElement && node.current.disabled) {\n        return;\n    }\n    if (node.animationState && props.whileTap) {\n        node.animationState.setActive(\"whileTap\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onTap\" + (lifecycle === \"End\" ? \"\" : lifecycle));\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass PressGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = press(current, (_element, startEvent) => {\n            handlePressEvent(this.node, startEvent, \"Start\");\n            return (endEvent, { success }) => handlePressEvent(this.node, endEvent, success ? \"End\" : \"Cancel\");\n        }, { useGlobalTarget: this.node.props.globalTapTarget });\n    }\n    unmount() { }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { pipe } from 'motion-utils';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { createDomVisualElement } from '../../dom/create-visual-element.mjs';\nimport { createMotionProxy } from '../create-proxy.mjs';\nimport { featureBundle } from './feature-bundle.mjs';\n\nconst motion = /*@__PURE__*/ createMotionProxy(featureBundle, createDomVisualElement);\n\nexport { motion };\n","import { animations } from '../../../motion/features/animations.mjs';\nimport { drag } from '../../../motion/features/drag.mjs';\nimport { gestureAnimations } from '../../../motion/features/gestures.mjs';\nimport { layout } from '../../../motion/features/layout.mjs';\n\nconst featureBundle = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n\nexport { featureBundle };\n"],"names":["transformPropOrder","transformProps","Set","radToDeg","rad","Math","PI","rotate","v","angle","atan2","rebaseAngle","matrix2dParsers","x","y","translateX","translateY","scaleX","scaleY","scale","abs","rotateZ","skewX","atan","skewY","skew","sqrt","matrix3dParsers","z","translateZ","rotateX","rotateY","defaultTransformValue","name","includes","parseValueFromTransform","transform","matrix3dMatch","match","parsers","matrix2dMatch","valueParser","values","split","map","convertTransformToNumber","value","parseFloat","trim","checkStringStartsWith","token","key","startsWith","isCSSVariableName","startsAsVariableToken","isCSSVariableToken","singleCssVariableRegex","test","convertBoundingBoxToBox","_ref","top","left","right","bottom","min","max","mixNumber","from","to","progress","isIdentityScale","undefined","hasScale","hasTransform","has2DTranslate","is2DTranslate","scalePoint","point","originPoint","applyPointDelta","translate","boxScale","applyAxisDelta","axis","arguments","length","applyBoxDelta","box","TREE_SCALE_SNAP_MIN","TREE_SCALE_SNAP_MAX","translateAxis","distance","transformAxis","axisTranslate","axisScale","axisOrigin","transformBox","originX","originY","measureViewportBox","instance","transformPoint","topLeft","bottomRight","transformBoxPoints","getBoundingClientRect","positionalKeys","clamp","number","parse","alpha","_objectSpread","default","createUnitType","unit","endsWith","concat","degrees","percent","px","vh","vw","progressPercentage","testValueType","type","dimensionValueTypes","findDimensionValueType","find","isNumericalString","splitCSSVariableRegex","getVariableValue","current","element","depth","fallback","exec","token1","token2","parseCSSVariable","resolved","window","getComputedStyle","getPropertyValue","trimmed","isNumOrPxType","transformKeys","nonTranslationalTransformKeys","filter","has","positionalValues","width","_ref2","paddingLeft","paddingRight","height","_ref3","_ref4","paddingTop","paddingBottom","_bbox","_ref5","_ref6","_ref7","_ref8","_ref9","_ref0","_ref1","_ref10","noop","any","MotionGlobalConfig","stepsOrder","statsBuffer","addProjectionMetrics","createRenderBatcher","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","state","delta","timestamp","isProcessing","flagRunNextFrame","steps","reduce","acc","stepName","thisFrame","nextFrame","flushNextFrame","toKeepAlive","WeakSet","latestFrameData","numCalls","triggerCallback","callback","step","schedule","queue","add","cancel","delete","process","frameData","forEach","frameloop","push","clear","createRenderStep","setup","read","resolveKeyframes","preUpdate","update","preRender","render","postRender","processBatch","useManualTiming","performance","now","keepAlive","immediate","i","frame","cancelFrame","frameSteps","requestAnimationFrame","toResolve","isScheduled","anyNeedsMeasurement","isForced","measureAllKeyframes","resolversToMeasure","Array","resolver","needsMeasurement","elementsToMeasure","transformsToRestore","Map","removedTransforms","visualElement","getValue","get","set","removeNonTranslationalTransform","measureInitialState","restore","_element$getValue","measureEndState","suspendedScrollY","scrollTo","complete","readAllKeyframes","readKeyframes","KeyframeResolver","constructor","unresolvedKeyframes","onComplete","motionValue","isAsync","this","scheduleResolve","currentValue","finalKeyframe","valueAsRead","readValue","keyframes","_keyframes$i","fillWildcards","setFinalKeyframe","renderEndStyles","isForcedComplete","resume","isZeroValueString","isNone","sanitize","round","floatRegex","singleColorRegex","isColorString","testProp","Boolean","isNullish","Object","prototype","hasOwnProperty","call","splitColor","aName","bName","cName","a","b","c","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","substring","parseInt","hsla","hue","saturation","lightness","color","getAnimatableNone","parsed","colorRegex","NUMBER_TOKEN","COLOR_TOKEN","complexRegex","analyseComplexValue","originalValue","toString","indexes","var","types","replace","parsedValue","parseComplexValue","createTransformer","source","numSections","output","convertNumbersToZero","complex","_v$match","_v$match2","isNaN","transformer","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","functions","join","int","transformValueTypes","scaleZ","perspective","transformPerspective","opacity","originZ","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","maxWidth","maxHeight","padding","margin","marginTop","marginRight","marginBottom","marginLeft","backgroundPositionX","backgroundPositionY","zIndex","fillOpacity","strokeOpacity","numOctaves","defaultValueTypes","backgroundColor","outlineColor","fill","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","invalidTemplates","DOMKeyframesResolver","super","keyframe","resolveNoneKeyframes","origin","target","originType","targetType","noneKeyframeIndexes","animatableTemplate","noneIndex","makeNoneKeyframesAnimatable","pageYOffset","measuredOrigin","measureKeyframe","jump","_this$removedTransfor","finalKeyframeIndex","unsetTransformName","unsetTransformValue","isMotionValue","getVelocity","clearTime","time","newTime","queueMicrotask","addUniqueItem","arr","item","indexOf","removeItem","index","splice","SubscriptionManager","subscriptions","handler","notify","numSubscriptions","getSize","velocityPerSecond","velocity","frameDuration","collectMotionValues","MotionValue","init","options","canTrackVelocity","events","updateAndNotify","currentTime","_this$events$change","updatedAt","setPrevFrameValue","prev","setCurrent","change","dependents","dependent","dirty","hasAnimated","owner","prevFrameValue","prevUpdatedAt","onChange","subscription","on","eventName","unsubscribe","stop","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","setWithVelocity","endAnimation","_this$events$change2","addDependent","removeDependent","getPrevious","start","startAnimation","Promise","resolve","animation","animationStart","then","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","_this$dependents","_this$events$destroy","valueTypes","microtask","cancelMicrotask","featureProps","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","isEnabled","props","some","createBox","isBrowser","prefersReducedMotion","hasReducedMotionListener","visualElementStore","WeakMap","isAnimationControls","isVariantLabel","isArray","variantPriorityOrder","variantProps","isControllingVariants","animate","isVariantNode","variants","getValueState","resolveVariantFromProps","definition","custom","propEventHandlers","VisualElement","scrapeMotionValuesFromProps","_props","_prevProps","_visualElement","parent","presenceContext","reducedMotionConfig","blockInitialAnimation","visualState","children","shouldReduceMotion","features","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","latestValues","triggerBuild","renderInstance","renderState","style","projection","renderScheduledAt","scheduleRender","baseTarget","initialValues","initial","variantChildren","manuallyAnimateOnMount","_this$scrapeMotionVal","willChange","initialMotionValues","_objectWithoutProperties","_excluded","mount","_this$parent","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","matches","addEventListener","initPrefersReducedMotion","addChild","unmount","_this$parent2","remove","removeChild","feature","isMounted","child","_this$enteringChildre","enteringChildren","valueIsTransform","onBindTransform","removeOnChange","latestValue","onUpdate","isTransformDirty","removeSyncCheck","MotionCheckAppearSync","sortNodePosition","other","sortInstanceNodePosition","updateFeatures","featureDefinition","Feature","FeatureConstructor","build","measureInstanceViewportBox","getStaticValue","setStaticValue","transformTemplate","prevProps","prevPresenceContext","listener","next","nextValue","prevValue","addValue","hasValue","existingValue","liveStyle","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getProps","getVariant","getDefaultTransition","transition","getTransformPagePoint","transformPagePoint","getClosestVariantNode","closestVariantNode","removeValueFromRenderState","_this$getBaseTargetFr","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","getBaseTarget","valueFromInitial","_this$presenceContext","variant","_len","args","_key","scheduleRenderMicrotask","DOMVisualElement","compareDocumentPosition","vars","childSubscription","latest","textContent","getValueAsType","translateAlias","numTransforms","buildHTMLStyles","transformOrigin","hasTransformOrigin","valueAsType","transformString","transformIsDefault","valueIsDefault","buildTransform","renderHTML","styleProp","elementStyle","applyProjectionStyles","setProperty","scaleCorrectors","isForcedMotionValue","layoutId","newValues","_visualElement$getVal","HTMLVisualElement","_this$projection","isProjecting","readTransformValue","computedStyle","camelToDash","str","toLowerCase","dashKeys","offset","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","viewBox","attrs","_attrs$transformOrigi","_styleProp$transformB","spacing","useDashCase","keys","buildSVGPath","camelCaseAttributes","tag","scrapeMotionValuesFromProps$1","charAt","toUpperCase","SVGVisualElement","defaultType","getAttribute","_styleProp","setAttribute","renderSVG","tagName","lowercaseSVGElements","isSVGComponent","Component","createDomVisualElement","allowProjection","Fragment","LayoutGroupContext","createContext","LazyContext","strict","MotionConfigContext","p","isStatic","reducedMotion","MotionContext","useCreateMotionContext","context","inherit","getCurrentTreeVariants","useContext","useMemo","variantLabelsAsDependency","prop","createHtmlRenderState","copyRawValuesOnly","useStyle","assign","useInitialMotionValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","createSvgRenderState","useSVGProps","_isStatic","visualProps","rawStyles","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","_unused","useRender","ref","forwardMotionProps","filteredProps","isDom","filterProps","elementProps","renderedChildren","createElement","PresenceContext","resolveMotionValue","makeLatestValues","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","list","transitionEnd","valueTarget","makeUseVisualState","config","make","createRenderState","makeState","useRef","useConstant","useHTMLVisualState","useSVGVisualState","motionComponentSymbol","Symbol","for","isRefObject","useMotionRef","externalRef","useCallback","onMount","optimizedAppearDataAttribute","SwitchLayoutGroupContext","useIsomorphicLayoutEffect","useLayoutEffect","useEffect","useVisualElement","createVisualElement","ProjectionNodeConstructor","_window$MotionHandoff","_window","_window$MotionHasOpti","_window2","lazyContext","visualElementRef","renderer","initialLayoutGroupConfig","initialPromotionConfig","dragConstraints","layoutScroll","layoutRoot","layoutCrossfade","getClosestProjectingNode","setOptions","alwaysMeasureLayout","animationType","crossfade","createProjectionNode","useInsertionEffect","optimisedAppearId","wantsHandoff","MotionHandoffIsComplete","MotionHasOptimisedAnimation","MotionIsMounted","animationState","animateChanges","_window$MotionHandoff2","_window3","MotionHandoffMarkAsComplete","createMotionComponent","_Component$displayNam","preloadedFeatures","loadFeatures","useVisualState","MotionDOMComponent","MeasureLayout","configAndProps","useLayoutId","useStrictMode","layoutProjection","combined","ProjectionNode","getProjectionFunctionality","jsxs","Provider","jsx","displayName","ForwardRefMotionComponent","forwardRef","layoutGroupId","id","createMotionProxy","Proxy","componentCache","factory","deprecatedFactoryFunction","_target","resolveVariant","getValueTransition","_transition$key","isKeyframesTarget","setMotionValue","resolveFinalValueInKeyframes","addValueToWillChange","WillChange","newWillChange","getOptimisedAppearId","makeAnimationInstant","duration","combineFunctions","pipe","transformers","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","activeAnimations","mainThread","waapi","hueToRgb","q","t","mixImmediate","mixLinearColor","fromExpo","expo","colorTypes","asRGBA","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","invisibleValues","mixNumber$1","getMixer","mixComplex","mixArray","mixObject","numValues","blendValue","template","originStats","targetStats","mixVisibility","orderedOrigin","pointers","_origin$values$origin","originIndex","originValue","matchOrder","mix","mixer","frameloopDriver","passTimestamp","generateLinearEasing","easing","resolution","points","numPoints","maxGeneratorDuration","calcGeneratorDuration","generator","done","Infinity","calcGeneratorVelocity","resolveValue","prevT","springDefaults","stiffness","damping","mass","bounce","visualDuration","restSpeed","granular","restDelta","minDuration","maxDuration","minDamping","maxDamping","safeMin","findSpring","envelope","derivative","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","d","e","pow","f","initialGuess","result","rootIterations","approximateRoot","durationKeys","physicsKeys","isSpringType","spring","optionsOrVisualDuration","isResolvedFromDuration","springOptions","root","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","resolveSpring","angularFreq","sin","cos","dampedAngularFreq","freqForT","sinh","cosh","calculatedDuration","currentVelocity","isBelowVelocityThreshold","isBelowDisplacementThreshold","toTransition","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","applyToOptions","generatorOptions","ease","createGeneratorEasing","calcBezier","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","binarySubdivide","easeIn","easeOut","easeInOut","mirrorEasing","reverseEasing","backOut","backIn","backInOut","anticipate","circIn","acos","circOut","circInOut","isBezierDefinition","easingLookup","linear","easingDefinitionToFunction","x1","y1","x2","y2","toFromDifference","interpolate","input","isClamp","inputLength","isZeroDeltaRange","reverse","mixers","customMixer","mixerFactory","numMixers","easingFunction","createMixers","interpolator","progressInRange","defaultOffset","remaining","offsetProgress","fillOffset","keyframeValues","times","easingFunctions","isEasingArray","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","isNotNull","getFinalKeyframe","repeat","repeatType","speed","resolvedKeyframes","transitionTypeMap","decay","tween","replaceTransitionType","WithPromise","updateFinished","finished","_finished","notifyFinished","onResolve","onReject","percentToProgress","JSAnimation","startTime","isStopped","holdTime","playbackSpeed","_this$options$onStop","_this$options","tick","teardown","onStop","initAnimation","play","autoplay","pause","repeatDelay","keyframes$1","generatorFactory","mixKeyframes","mirroredGenerator","resolvedDuration","totalDuration","updateTime","animationTime","sample","delay","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","isAnimationFinished","finish","reject","_this$driver","driver","newSpeed","hasChanged","_this$options$onPlay","_this$options2","onPlay","_this$options$onCompl","_this$options3","_this$options$onCance","_this$options4","onCancel","stopDriver","sampleTime","attachTimeline","timeline","_this$driver2","allowFlatten","observe","memo","supportsScrollTimeline","ScrollTimeline","supportsFlags","memoSupports","supportsFlag","memoized","_supportsFlags$suppor","supportsLinearEasing","document","cubicBezierAsString","supportedWaapiEasing","mapEasingToNativeEasing","segmentEasing","startWaapiAnimation","valueName","pseudoElement","keyframeOptions","iterations","direction","finally","isGenerator","NativeAnimation","finishedTime","isPseudoElement","_options$duration","_options$ease","applyGeneratorOptions","onfinish","updateMotionValue","isCSSVar","setStyle","_this$animation$finis","_this$animation","commitStyles","_this$animation$commi","_this$animation2","_this$animation$effec","_this$animation$effec2","effect","getComputedTiming","Number","playbackRate","playState","newStartTime","_this$animation$effec3","updateTiming","unsupportedEasingFunctions","replaceStringEasing","NativeAnimationExtended","_this$finishedTime","sampleAnimation","isAnimatable","acceleratedValues","supportsWaapi","Element","AsyncMotionValueAnimation","_this$keyframeResolve2","_this$keyframeResolve","_this$stopTimeline","_animation","stopTimeline","keyframeResolver","createdAt","optionsWithDefaults","KeyframeResolver$1","forced","onKeyframesResolved","sync","isHandoff","resolvedAt","originKeyframe","targetKeyframe","isOriginAnimatable","isTargetAnimatable","hasKeyframesChanged","canAnimate","instantAnimations","resolvedOptions","_motionValue$owner","HTMLElement","supportsBrowserAnimation","catch","pendingTimeline","_onReject","_this$keyframeResolve3","_this$keyframeResolve4","underDampedSpring","keyframesTransition","valueKey","animateMotionValue","valueTransition","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","shouldSkip","skipAnimations","isSync","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","targetAndTransition","transitionOverride","animations","animationTypeState","getState","_visualElement$latest","MotionHandoffAnimation","appearId","all","setTarget","calcChildStagger","sort","numChildren","size","maxStaggerDuration","animateVariant","_visualElement$presen","getAnimation","getChildAnimations","forwardDelay","animateChildren","first","last","shallowCompare","prevLength","numVariantProps","getVariantContext","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createState","isInitialRender","buildResolvedTypeValues","changedActiveType","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isActive","isInherited","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","handledRemovedValues","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","valueHasChanged","willAnimateViaParent","parentVariant","fallbackAnimation","initialTransition","fallbackTarget","shouldAnimate","setActive","_visualElement$varian","_child$animationState","setAnimateFunction","makeAnimator","reset","createTypeState","whileInView","whileHover","whileDrag","whileFocus","node","updateAnimationControlsSubscription","unmountControls","subscribe","prevAnimate","_this$unmountControls","isPresent","onExitComplete","prevIsPresent","exitAnimation","register","isDragging","isDragActive","addDomEvent","passive","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pageX","pageY","addPointerEvent","addPointerInfo","calcLength","calcAxisDelta","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","eachAxis","getContextWindow","ownerDocument","defaultView","PanSession","handlers","contextWindow","dragSnapToOrigin","distanceThreshold","startEvent","lastMoveEvent","lastMoveEventInfo","updatePoint","info","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","handlePointerUp","end","onEnd","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","elementDragControls","VisualElementDragControls","openDragLock","currentDirection","constraints","hasMutatedConstraints","elastic","latestPointerEvent","latestPanInfo","originEvent","snapToCursor","panSession","pauseAnimation","stopAnimation","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","_this$getAxisMotionVa","getAnimationState","finalEvent","finalPanInfo","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","_this$visualElement$p","measure","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","_this$getAxisMotionVa2","_this$getAxisMotionVa3","dragKey","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","calcOrigin","updateScroll","updateLayout","addListeners","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","hasTakenAnySnapshot","MeasureLayoutWithContext","componentDidMount","layoutGroup","switchLayoutGroup","correctors","isCSSVariable","addScaleCorrector","defaultScaleCorrectors","group","didUpdate","safeToRemove","getSnapshotBeforeUpdate","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","componentDidUpdate","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","deregister","useId","usePresence","applyTo","boxShadow","isObject","isSVGElement","compareByDepth","FlatTree","isDirty","timeout","checkElapsed","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","copyAxisDeltaInto","originDelta","removePointDelta","removeAxisTransforms","transforms","sourceAxis","scaleKey","originKey","removeAxisDelta","xKeys","yKeys","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","axisEquals","axisEqualsRounded","boxEqualsRounded","aspectRatio","axisDeltaEquals","NodeStack","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","metrics","nodes","calculatedTargetDeltas","calculatedProjections","transformAxes","resetDistortingTransform","sharedAnimationValues","cancelTreeOptimisedTransformAnimations","projectionNode","hasCheckedOptimisedAppear","MotionCancelOptimisedAnimation","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","animationCommitId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","scheduleUpdate","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","resolvedRelativeTargetAt","hasProjected","isVisible","animationProgress","sharedNodes","path","notifyListeners","subscriptionManager","hasListeners","cancelDelay","innerWidth","resizeUnblockUpdate","newInnerWidth","finishAnimation","registerSharedNode","hasRelativeLayoutChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","hasTargetChanged","targetLayout","hasOnlyRelativeTargetChanged","animationOptions","setAnimationOrigin","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetSkewAndRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","measuredBox","prevLayout","layoutCorrected","phase","isRoot","wasRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","_this$scroll","checkNodeWasScrollRoot","_this$scroll2","boxWithoutScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","canSkip","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","prevProjectionDelta","createProjectionDeltas","_this$options$visualE","notifyAll","projectionDeltaWithTransform","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","_lead$opacity","_follow$opacity","opacityExit","_follow$opacity2","_lead$opacity2","borderLabel","followRadius","leadRadius","mixValues","_this$currentAnimatio","_this$resumingFrom","motionValue$1","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","xLength","yLength","shouldPreserveFollowOpacity","_this$getStack","getPrevLead","_this$getStack2","hasDistortingTransform","resetValues","targetStyle","visibility","pointerEvents","valuesToRender","latestTransform","xTranslate","yTranslate","zTranslate","elementScaleX","elementScaleY","buildProjectionTransform","_valuesToRender$opaci","corrected","num","resetTree","_node$currentAnimatio","_node$resumeFrom","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","string","navigator","userAgent","roundPoint","maxDistance","_node$scroll","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","controls","dragControls","setupGesture","elementOrSelector","elements","scope","selectorCache","EventTarget","_selectorCache$elemen","querySelectorAll","resolveElements","gestureAbortController","AbortController","signal","abort","isValidHover","handleHoverEvent","lifecycle","isNodeOrChild","parentElement","focusableElements","isPressing","filterEvents","firePointerEvent","dispatchEvent","PointerEvent","bubbles","isValidPressEvent","press","targetOrSelector","onPressStart","targets","eventOptions","cancelEvents","startPress","currentTarget","onPressEnd","onPointerEnd","endEvent","success","onPointerUp","onPointerCancel","upEvent","useGlobalTarget","cancelEvent","enableKeyboardPress","focusEvent","handleKeydown","handleKeyup","handleBlur","isElementKeyboardAccessible","hasAttribute","handlePressEvent","HTMLButtonElement","disabled","observerCallbacks","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","unobserve","thresholdNames","gestureAnimations","hasEnteredView","isInView","startObserver","viewport","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","hasOptionsChanged","prevViewport","hasViewportOptionChanged","_element","globalTapTarget","onFocus","isFocusVisible","onBlur","onHoverStart","onPointerEnter","enterEvent","onHoverEnd","onPointerLeave","leaveEvent","motion"],"sourceRoot":""}