{"ast":null,"code":"import _objectSpread from\"C:/Users/Jurek2/Downloads/Project_WEB_01/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _objectWithoutProperties from\"C:/Users/Jurek2/Downloads/Project_WEB_01/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";const _excluded=[\"to\",\"href\",\"children\"];import React from'react';import{Link}from'react-router-dom';import{normalizeHref}from'../lib/seo/normalizeHref';/**\n * A wrapper around React Router's Link component that automatically normalizes hrefs\n * to ensure consistency with canonical URLs\n */import{jsx as _jsx}from\"react/jsx-runtime\";const NormalizedLink=_ref=>{let{to,href,children}=_ref,props=_objectWithoutProperties(_ref,_excluded);// Support both 'to' (React Router) and 'href' (HTML anchor) props\nconst originalHref=to||href;if(!originalHref){return/*#__PURE__*/_jsx(\"a\",_objectSpread(_objectSpread({},props),{},{children:children}));}const normalizedHref=normalizeHref(originalHref);// Handle null/undefined normalized href\nif(!normalizedHref||typeof normalizedHref!=='string'){return/*#__PURE__*/_jsx(\"a\",_objectSpread(_objectSpread({},props),{},{children:children}));}// Check if this is an external link or special link type\nconst BASE=process.env.REACT_APP_SITE_URL||(typeof window!=='undefined'?window.location.origin:'');const isExternal=normalizedHref.startsWith('http')&&!normalizedHref.startsWith(BASE);const isSpecial=normalizedHref.startsWith('mailto:')||normalizedHref.startsWith('tel:')||normalizedHref.startsWith('#');// Use regular anchor tag for external links and special links\nif(isExternal||isSpecial){return/*#__PURE__*/_jsx(\"a\",_objectSpread(_objectSpread({href:normalizedHref},props),{},{children:children}));}// Convert full URLs back to relative paths for React Router\nlet routerPath=normalizedHref;if(BASE&&normalizedHref.startsWith(BASE)){routerPath=normalizedHref.replace(BASE,'')||'/';}// Use React Router Link for internal navigation\nreturn/*#__PURE__*/_jsx(Link,_objectSpread(_objectSpread({to:routerPath},props),{},{children:children}));};export default NormalizedLink;","map":{"version":3,"names":["React","Link","normalizeHref","jsx","_jsx","NormalizedLink","_ref","to","href","children","props","_objectWithoutProperties","_excluded","originalHref","_objectSpread","normalizedHref","BASE","process","env","REACT_APP_SITE_URL","window","location","origin","isExternal","startsWith","isSpecial","routerPath","replace"],"sources":["C:/Users/Jurek2/Downloads/Project_WEB_01/src/components/NormalizedLink.js"],"sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { normalizeHref } from '../lib/seo/normalizeHref';\n\n/**\n * A wrapper around React Router's Link component that automatically normalizes hrefs\n * to ensure consistency with canonical URLs\n */\nconst NormalizedLink = ({ to, href, children, ...props }) => {\n  // Support both 'to' (React Router) and 'href' (HTML anchor) props\n  const originalHref = to || href;\n  \n  if (!originalHref) {\n    return <a {...props}>{children}</a>;\n  }\n  \n  const normalizedHref = normalizeHref(originalHref);\n  \n  // Handle null/undefined normalized href\n  if (!normalizedHref || typeof normalizedHref !== 'string') {\n    return <a {...props}>{children}</a>;\n  }\n  \n  // Check if this is an external link or special link type\n  const BASE = (process.env.REACT_APP_SITE_URL || (typeof window !== 'undefined' ? window.location.origin : ''));\n  const isExternal = normalizedHref.startsWith('http') && !normalizedHref.startsWith(BASE);\n  const isSpecial = normalizedHref.startsWith('mailto:') || \n                   normalizedHref.startsWith('tel:') || \n                   normalizedHref.startsWith('#');\n  \n  // Use regular anchor tag for external links and special links\n  if (isExternal || isSpecial) {\n    return (\n      <a href={normalizedHref} {...props}>\n        {children}\n      </a>\n    );\n  }\n  \n  // Convert full URLs back to relative paths for React Router\n  let routerPath = normalizedHref;\n  if (BASE && normalizedHref.startsWith(BASE)) {\n    routerPath = normalizedHref.replace(BASE, '') || '/';\n  }\n  \n  // Use React Router Link for internal navigation\n  return (\n    <Link to={routerPath} {...props}>\n      {children}\n    </Link>\n  );\n};\n\nexport default NormalizedLink;\n"],"mappings":"wTAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,IAAI,KAAQ,kBAAkB,CACvC,OAASC,aAAa,KAAQ,0BAA0B,CAExD;AACA;AACA;AACA,GAHA,OAAAC,GAAA,IAAAC,IAAA,yBAIA,KAAM,CAAAC,cAAc,CAAGC,IAAA,EAAsC,IAArC,CAAEC,EAAE,CAAEC,IAAI,CAAEC,QAAmB,CAAC,CAAAH,IAAA,CAAPI,KAAK,CAAAC,wBAAA,CAAAL,IAAA,CAAAM,SAAA,EACpD;AACA,KAAM,CAAAC,YAAY,CAAGN,EAAE,EAAIC,IAAI,CAE/B,GAAI,CAACK,YAAY,CAAE,CACjB,mBAAOT,IAAA,KAAAU,aAAA,CAAAA,aAAA,IAAOJ,KAAK,MAAAD,QAAA,CAAGA,QAAQ,EAAI,CAAC,CACrC,CAEA,KAAM,CAAAM,cAAc,CAAGb,aAAa,CAACW,YAAY,CAAC,CAElD;AACA,GAAI,CAACE,cAAc,EAAI,MAAO,CAAAA,cAAc,GAAK,QAAQ,CAAE,CACzD,mBAAOX,IAAA,KAAAU,aAAA,CAAAA,aAAA,IAAOJ,KAAK,MAAAD,QAAA,CAAGA,QAAQ,EAAI,CAAC,CACrC,CAEA;AACA,KAAM,CAAAO,IAAI,CAAIC,OAAO,CAACC,GAAG,CAACC,kBAAkB,GAAK,MAAO,CAAAC,MAAM,GAAK,WAAW,CAAGA,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAG,EAAE,CAAE,CAC9G,KAAM,CAAAC,UAAU,CAAGR,cAAc,CAACS,UAAU,CAAC,MAAM,CAAC,EAAI,CAACT,cAAc,CAACS,UAAU,CAACR,IAAI,CAAC,CACxF,KAAM,CAAAS,SAAS,CAAGV,cAAc,CAACS,UAAU,CAAC,SAAS,CAAC,EACrCT,cAAc,CAACS,UAAU,CAAC,MAAM,CAAC,EACjCT,cAAc,CAACS,UAAU,CAAC,GAAG,CAAC,CAE/C;AACA,GAAID,UAAU,EAAIE,SAAS,CAAE,CAC3B,mBACErB,IAAA,KAAAU,aAAA,CAAAA,aAAA,EAAGN,IAAI,CAAEO,cAAe,EAAKL,KAAK,MAAAD,QAAA,CAC/BA,QAAQ,EACR,CAAC,CAER,CAEA;AACA,GAAI,CAAAiB,UAAU,CAAGX,cAAc,CAC/B,GAAIC,IAAI,EAAID,cAAc,CAACS,UAAU,CAACR,IAAI,CAAC,CAAE,CAC3CU,UAAU,CAAGX,cAAc,CAACY,OAAO,CAACX,IAAI,CAAE,EAAE,CAAC,EAAI,GAAG,CACtD,CAEA;AACA,mBACEZ,IAAA,CAACH,IAAI,CAAAa,aAAA,CAAAA,aAAA,EAACP,EAAE,CAAEmB,UAAW,EAAKhB,KAAK,MAAAD,QAAA,CAC5BA,QAAQ,EACL,CAAC,CAEX,CAAC,CAED,cAAe,CAAAJ,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}