{"ast":null,"code":"const reportWebVitals=onPerfEntry=>{// Only load web-vitals in development to reduce production bundle size\nif(process.env.NODE_ENV==='development'&&onPerfEntry&&onPerfEntry instanceof Function){import('web-vitals').then(_ref=>{let{getCLS,getFID,getFCP,getLCP,getTTFB}=_ref;getCLS(onPerfEntry);getFID(onPerfEntry);getFCP(onPerfEntry);getLCP(onPerfEntry);getTTFB(onPerfEntry);}).catch(()=>{// Silently fail if web-vitals can't be loaded\n});}};export default reportWebVitals;","map":{"version":3,"names":["reportWebVitals","onPerfEntry","process","env","NODE_ENV","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","catch"],"sources":["C:/Users/Jurek2/Downloads/Project_WEB_01/src/reportWebVitals.js"],"sourcesContent":["const reportWebVitals = onPerfEntry => {\r\n  // Only load web-vitals in development to reduce production bundle size\r\n  if (process.env.NODE_ENV === 'development' && onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    }).catch(() => {\r\n      // Silently fail if web-vitals can't be loaded\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;"],"mappings":"AAAA,KAAM,CAAAA,eAAe,CAAGC,WAAW,EAAI,CACrC;AACA,GAAIC,OAAO,CAACC,GAAG,CAACC,QAAQ,GAAK,aAAa,EAAIH,WAAW,EAAIA,WAAW,WAAY,CAAAI,QAAQ,CAAE,CAC5F,MAAM,CAAC,YAAY,CAAC,CAACC,IAAI,CAACC,IAAA,EAAiD,IAAhD,CAAEC,MAAM,CAAEC,MAAM,CAAEC,MAAM,CAAEC,MAAM,CAAEC,OAAQ,CAAC,CAAAL,IAAA,CACpEC,MAAM,CAACP,WAAW,CAAC,CACnBQ,MAAM,CAACR,WAAW,CAAC,CACnBS,MAAM,CAACT,WAAW,CAAC,CACnBU,MAAM,CAACV,WAAW,CAAC,CACnBW,OAAO,CAACX,WAAW,CAAC,CACtB,CAAC,CAAC,CAACY,KAAK,CAAC,IAAM,CACb;AAAA,CACD,CAAC,CACJ,CACF,CAAC,CAED,cAAe,CAAAb,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}