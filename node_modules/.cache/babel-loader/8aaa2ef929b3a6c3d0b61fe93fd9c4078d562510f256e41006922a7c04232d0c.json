{"ast":null,"code":"const reportWebVitals = onPerfEntry => {\n  // Only load web-vitals in development to reduce production bundle size\n  if (process.env.NODE_ENV === 'development' && onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS,\n      getFID,\n      getFCP,\n      getLCP,\n      getTTFB\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    }).catch(() => {\n      // Silently fail if web-vitals can't be loaded\n    });\n  }\n};\nexport default reportWebVitals;","map":{"version":3,"names":["reportWebVitals","onPerfEntry","process","env","NODE_ENV","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","catch"],"sources":["C:/Users/Jurek2/Downloads/Project_WEB_01/src/reportWebVitals.js"],"sourcesContent":["const reportWebVitals = onPerfEntry => {\r\n  // Only load web-vitals in development to reduce production bundle size\r\n  if (process.env.NODE_ENV === 'development' && onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    }).catch(() => {\r\n      // Silently fail if web-vitals can't be loaded\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;"],"mappings":"AAAA,MAAMA,eAAe,GAAGC,WAAW,IAAI;EACrC;EACA,IAAIC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,aAAa,IAAIH,WAAW,IAAIA,WAAW,YAAYI,QAAQ,EAAE;IAC5F,MAAM,CAAC,YAAY,CAAC,CAACC,IAAI,CAAC,CAAC;MAAEC,MAAM;MAAEC,MAAM;MAAEC,MAAM;MAAEC,MAAM;MAAEC;IAAQ,CAAC,KAAK;MACzEJ,MAAM,CAACN,WAAW,CAAC;MACnBO,MAAM,CAACP,WAAW,CAAC;MACnBQ,MAAM,CAACR,WAAW,CAAC;MACnBS,MAAM,CAACT,WAAW,CAAC;MACnBU,OAAO,CAACV,WAAW,CAAC;IACtB,CAAC,CAAC,CAACW,KAAK,CAAC,MAAM;MACb;IAAA,CACD,CAAC;EACJ;AACF,CAAC;AAED,eAAeZ,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}