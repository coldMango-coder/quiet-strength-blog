{"ast":null,"code":"/**\r\n * Generates canonical URLs for trueallyguide.com pages\r\n * Ensures EXACT match between canonical URLs and live page URLs\r\n * @param {string} pathname - The pathname from router (e.g., '/blog/post')\r\n * @returns {string} - The canonical URL that exactly matches the live URL\r\n */\nexport function getCanonicalUrl(pathname) {\n  // Use environment variable for base URL, with fallback to current origin\n  const baseUrl = process.env.REACT_APP_SITE_URL || (typeof window !== 'undefined' ? window.location.origin : 'http://localhost:5173');\n\n  // Normalize pathname with strict rules\n  let normalizedPath = pathname || '/';\n\n  // Remove query parameters and hash\n  normalizedPath = normalizedPath.split('?')[0].split('#')[0];\n\n  // Convert to lowercase for consistency\n  normalizedPath = normalizedPath.toLowerCase();\n\n  // Remove trailing slash except for root\n  if (normalizedPath !== '/' && normalizedPath.endsWith('/')) {\n    normalizedPath = normalizedPath.slice(0, -1);\n  }\n\n  // Construct canonical URL\n  return `${baseUrl}${normalizedPath}`;\n}","map":{"version":3,"names":["getCanonicalUrl","pathname","baseUrl","process","env","REACT_APP_SITE_URL","window","location","origin","normalizedPath","split","toLowerCase","endsWith","slice"],"sources":["C:/Users/Jurek2/Downloads/Project_WEB_01/src/lib/seo/getCanonicalUrl.js"],"sourcesContent":["/**\r\n * Generates canonical URLs for trueallyguide.com pages\r\n * Ensures EXACT match between canonical URLs and live page URLs\r\n * @param {string} pathname - The pathname from router (e.g., '/blog/post')\r\n * @returns {string} - The canonical URL that exactly matches the live URL\r\n */\r\nexport function getCanonicalUrl(pathname) {\n  // Use environment variable for base URL, with fallback to current origin\n  const baseUrl = process.env.REACT_APP_SITE_URL || (typeof window !== 'undefined' ? window.location.origin : 'http://localhost:5173');\n  \r\n  // Normalize pathname with strict rules\r\n  let normalizedPath = pathname || '/';\r\n  \r\n  // Remove query parameters and hash\r\n  normalizedPath = normalizedPath.split('?')[0].split('#')[0];\r\n  \r\n  // Convert to lowercase for consistency\r\n  normalizedPath = normalizedPath.toLowerCase();\r\n  \r\n  // Remove trailing slash except for root\n  if (normalizedPath !== '/' && normalizedPath.endsWith('/')) {\n    normalizedPath = normalizedPath.slice(0, -1);\n  }\n  \r\n  // Construct canonical URL\r\n  return `${baseUrl}${normalizedPath}`;\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASA,eAAeA,CAACC,QAAQ,EAAE;EACxC;EACA,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,kBAAkB,KAAK,OAAOC,MAAM,KAAK,WAAW,GAAGA,MAAM,CAACC,QAAQ,CAACC,MAAM,GAAG,uBAAuB,CAAC;;EAEpI;EACA,IAAIC,cAAc,GAAGR,QAAQ,IAAI,GAAG;;EAEpC;EACAQ,cAAc,GAAGA,cAAc,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAACA,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;;EAE3D;EACAD,cAAc,GAAGA,cAAc,CAACE,WAAW,CAAC,CAAC;;EAE7C;EACA,IAAIF,cAAc,KAAK,GAAG,IAAIA,cAAc,CAACG,QAAQ,CAAC,GAAG,CAAC,EAAE;IAC1DH,cAAc,GAAGA,cAAc,CAACI,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;EAC9C;;EAEA;EACA,OAAO,GAAGX,OAAO,GAAGO,cAAc,EAAE;AACtC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}