{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jurek2\\\\Downloads\\\\Project_WEB_01\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { HelmetProvider } from 'react-helmet-async';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n// Safe SPA initialization with guards to prevent double initialization\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction startApp() {\n  // Prevent multiple initialization attempts\n  if (window.__APP_STARTED__) {\n    console.warn('App already started, skipping duplicate initialization');\n    return;\n  }\n  window.__APP_STARTED__ = true;\n\n  // Ensure root element exists\n  const rootElement = document.getElementById('root');\n  if (!rootElement) {\n    console.error('Root element not found - cannot start app');\n    return;\n  }\n  try {\n    const root = ReactDOM.createRoot(rootElement);\n    root.render(/*#__PURE__*/_jsxDEV(React.StrictMode, {\n      children: /*#__PURE__*/_jsxDEV(BrowserRouter, {\n        children: /*#__PURE__*/_jsxDEV(HelmetProvider, {\n          children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this));\n\n    // Performance-optimized service worker for 100/100 scores\n    if ('serviceWorker' in navigator && process.env.NODE_ENV === 'production') {\n      window.addEventListener('load', () => {\n        navigator.serviceWorker.register('/sw.js', {\n          scope: '/',\n          updateViaCache: 'none'\n        }).then(registration => {\n          console.log('Performance SW registered successfully');\n        }).catch(error => {\n          console.warn('SW registration failed:', error);\n        });\n      });\n    }\n\n    // Performance monitoring (development only)\n    if (process.env.NODE_ENV === 'development') {\n      reportWebVitals(metric => {\n        // Log metrics for debugging (dev only)\n        console.log(metric.name, Math.round(metric.value));\n      });\n    }\n    console.log('SPA initialized successfully');\n  } catch (error) {\n    console.error('Failed to initialize SPA:', error);\n    // Fallback error UI\n    rootElement.innerHTML = '<h1>Loading Error</h1><p>Please <a href=\"/\">refresh the page</a>.</p>';\n  }\n}\n\n// Start app when DOM is ready\nif (document.readyState === 'loading') {\n  document.addEventListener('DOMContentLoaded', startApp, {\n    once: true\n  });\n} else {\n  // DOM already loaded\n  startApp();\n}","map":{"version":3,"names":["React","ReactDOM","HelmetProvider","BrowserRouter","App","reportWebVitals","jsxDEV","_jsxDEV","startApp","window","__APP_STARTED__","console","warn","rootElement","document","getElementById","error","root","createRoot","render","StrictMode","children","fileName","_jsxFileName","lineNumber","columnNumber","navigator","process","env","NODE_ENV","addEventListener","serviceWorker","register","scope","updateViaCache","then","registration","log","catch","metric","name","Math","round","value","innerHTML","readyState","once"],"sources":["C:/Users/Jurek2/Downloads/Project_WEB_01/src/index.js"],"sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport { HelmetProvider } from 'react-helmet-async';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\n// Safe SPA initialization with guards to prevent double initialization\r\nfunction startApp() {\r\n  // Prevent multiple initialization attempts\r\n  if (window.__APP_STARTED__) {\r\n    console.warn('App already started, skipping duplicate initialization');\r\n    return;\r\n  }\r\n  window.__APP_STARTED__ = true;\r\n\r\n  // Ensure root element exists\r\n  const rootElement = document.getElementById('root');\r\n  if (!rootElement) {\r\n    console.error('Root element not found - cannot start app');\r\n    return;\r\n  }\r\n\r\n  try {\r\n    const root = ReactDOM.createRoot(rootElement);\r\n    root.render(\r\n      <React.StrictMode>\r\n        <BrowserRouter>\r\n          <HelmetProvider>       \r\n            <App />\r\n          </HelmetProvider>   \r\n        </BrowserRouter>\r\n      </React.StrictMode>\r\n    );\r\n\r\n    // Performance-optimized service worker for 100/100 scores\r\n    if ('serviceWorker' in navigator && process.env.NODE_ENV === 'production') {\r\n      window.addEventListener('load', () => {\r\n        navigator.serviceWorker.register('/sw.js', { \r\n          scope: '/',\r\n          updateViaCache: 'none'\r\n        })\r\n        .then((registration) => {\r\n          console.log('Performance SW registered successfully');\r\n        })\r\n        .catch((error) => {\r\n          console.warn('SW registration failed:', error);\r\n        });\r\n      });\r\n    }\r\n\r\n    // Performance monitoring (development only)\r\n    if (process.env.NODE_ENV === 'development') {\r\n      reportWebVitals((metric) => {\r\n        // Log metrics for debugging (dev only)\r\n        console.log(metric.name, Math.round(metric.value));\r\n      });\r\n    }\r\n    \r\n    console.log('SPA initialized successfully');\r\n  } catch (error) {\r\n    console.error('Failed to initialize SPA:', error);\r\n    // Fallback error UI\r\n    rootElement.innerHTML = '<h1>Loading Error</h1><p>Please <a href=\"/\">refresh the page</a>.</p>';\r\n  }\r\n}\r\n\r\n// Start app when DOM is ready\r\nif (document.readyState === 'loading') {\r\n  document.addEventListener('DOMContentLoaded', startApp, { once: true });\r\n} else {\r\n  // DOM already loaded\r\n  startApp();\r\n}"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,SAASC,cAAc,QAAQ,oBAAoB;AACnD,SAASC,aAAa,QAAQ,kBAAkB;AAChD,OAAO,aAAa;AACpB,OAAOC,GAAG,MAAM,OAAO;AACvB,OAAOC,eAAe,MAAM,mBAAmB;;AAE/C;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,SAASC,QAAQA,CAAA,EAAG;EAClB;EACA,IAAIC,MAAM,CAACC,eAAe,EAAE;IAC1BC,OAAO,CAACC,IAAI,CAAC,wDAAwD,CAAC;IACtE;EACF;EACAH,MAAM,CAACC,eAAe,GAAG,IAAI;;EAE7B;EACA,MAAMG,WAAW,GAAGC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC;EACnD,IAAI,CAACF,WAAW,EAAE;IAChBF,OAAO,CAACK,KAAK,CAAC,2CAA2C,CAAC;IAC1D;EACF;EAEA,IAAI;IACF,MAAMC,IAAI,GAAGhB,QAAQ,CAACiB,UAAU,CAACL,WAAW,CAAC;IAC7CI,IAAI,CAACE,MAAM,cACTZ,OAAA,CAACP,KAAK,CAACoB,UAAU;MAAAC,QAAA,eACfd,OAAA,CAACJ,aAAa;QAAAkB,QAAA,eACZd,OAAA,CAACL,cAAc;UAAAmB,QAAA,eACbd,OAAA,CAACH,GAAG;YAAAkB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACO;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CACpB,CAAC;;IAED;IACA,IAAI,eAAe,IAAIC,SAAS,IAAIC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;MACzEpB,MAAM,CAACqB,gBAAgB,CAAC,MAAM,EAAE,MAAM;QACpCJ,SAAS,CAACK,aAAa,CAACC,QAAQ,CAAC,QAAQ,EAAE;UACzCC,KAAK,EAAE,GAAG;UACVC,cAAc,EAAE;QAClB,CAAC,CAAC,CACDC,IAAI,CAAEC,YAAY,IAAK;UACtBzB,OAAO,CAAC0B,GAAG,CAAC,wCAAwC,CAAC;QACvD,CAAC,CAAC,CACDC,KAAK,CAAEtB,KAAK,IAAK;UAChBL,OAAO,CAACC,IAAI,CAAC,yBAAyB,EAAEI,KAAK,CAAC;QAChD,CAAC,CAAC;MACJ,CAAC,CAAC;IACJ;;IAEA;IACA,IAAIW,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,aAAa,EAAE;MAC1CxB,eAAe,CAAEkC,MAAM,IAAK;QAC1B;QACA5B,OAAO,CAAC0B,GAAG,CAACE,MAAM,CAACC,IAAI,EAAEC,IAAI,CAACC,KAAK,CAACH,MAAM,CAACI,KAAK,CAAC,CAAC;MACpD,CAAC,CAAC;IACJ;IAEAhC,OAAO,CAAC0B,GAAG,CAAC,8BAA8B,CAAC;EAC7C,CAAC,CAAC,OAAOrB,KAAK,EAAE;IACdL,OAAO,CAACK,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACjD;IACAH,WAAW,CAAC+B,SAAS,GAAG,uEAAuE;EACjG;AACF;;AAEA;AACA,IAAI9B,QAAQ,CAAC+B,UAAU,KAAK,SAAS,EAAE;EACrC/B,QAAQ,CAACgB,gBAAgB,CAAC,kBAAkB,EAAEtB,QAAQ,EAAE;IAAEsC,IAAI,EAAE;EAAK,CAAC,CAAC;AACzE,CAAC,MAAM;EACL;EACAtC,QAAQ,CAAC,CAAC;AACZ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}